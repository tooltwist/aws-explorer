{"version":3,"sources":["webpack:///webpack/bootstrap fd4c67caa5b1eeb2cf04","webpack:///external \"express\"","webpack:///./server/misc/graph.js","webpack:///./server/misc/myAWS.js","webpack:///./lib/types.js","webpack:///./server/index.js","webpack:///external \"nuxt\"","webpack:///./server/api/index.js","webpack:///./server/api/users.js","webpack:///./server/api/graphApi.js","webpack:///external \"aws-sdk\"","webpack:///external \"aws-regions\"","webpack:///./server/misc/util.js","webpack:///external \"lru-cache\"","webpack:///./server/misc/download.js","webpack:///./nuxt.config.js"],"names":["myAWS","require","types","nodeIndex","AWSNode","type","id","key","keyForNode","data","children","parents","describeFn","fn","childNode","push","tagname","Tags","i","length","tag","Key","Value","ec2Home","region","vpcHome","SUBNET","SECGRP","VPC","NAT","IGW","INSTANCE","ADDR","KEYPAIR","NETIFACE","ROUTETABLE","ALB","TARGETGRP","desc","console","log","forEach","child","environment","toLowerCase","label","reset","nodeWithKey","node","findNode","setData","setDescribe","dumpAll","dump","getIndex","getKeys","keys","getNodes","nodes","nodesByType","arr","filter","sortAlphabetic","sorted","sort","a","b","env1","findEnvironment","env2","environments","map","list","module","exports","index","AWS","awsRegions","pad","INITIAL_REGION","regions","currentRegion","awsRegion","cloudformation","ec2","elbv2","autoscaling","ecs","rds","downloadRegions","callback","describeRegions","err","Regions","r1","r2","RegionName","regionDescription","regionCode","get","name","showRegions","r","public","code","checkAwsRegion","process","exit","substring","CloudFormation","apiVersion","EC2","ELBv2","AutoScaling","ECS","RDS","IMAGE","AZ","COSTCD","LOGICAL","PUBLICIP","LISTENER","RULE","CLUSTER","SERVICE","TASK","DATABASE","CACHE","SubnetId","GroupId","VpcId","NatGatewayId","InternetGatewayId","InstanceId","AllocationId","hasPublicRoutes","TargetGroupName","clusterName","serviceName","findTag","GroupName","PublicIp","PrivateIpAddress","LoadBalancerName","containers","description","CidrBlock","Description","State","NatGatewayAddresses","DNSName","status","registeredContainerInstancesCount","runningTasksCount","runningCount","version","lastStatus","describe","describeSubnet","describeSecurityGroup","describeVpc","describeInstance","HealthCheckPath","Matcher","HttpCode","describeTask","InstanceType","KeyName","Name","PublicIpAddress","s","contact","useVpcRouteTable","parent","c","networkBindings","hostPort","port","desiredStatus","memory","cpu","app","express","host","env","HOST","PORT","set","use","config","dev","nuxt","builder","build","render","listen","router","Router","users","stuff","req","res","next","json","parseInt","params","sendStatus","cache","LRU","cacheKey","value","query","reload","download","downloadEverything","stack","graph","obj","str","len","capitalize","toUpperCase","loadBalancersAreLoaded","targetGroupsAreLoaded","instancesAreLoaded","debug","findTargetGroupByARN","arn","all","TargetGroupArn","findInstanceById","JUMPBOX","downloadVpcs","describeVpcs","Vpcs","rec","downloadInstances","describeInstances","Reservations","Instances","instance","indexOf","_isJumpbox","img","ImageId","addChild","Placement","AvailabilityZone","az","ip","sn","vpc","SecurityGroups","g","sg","downloadSubnets","describeSubnets","Subnets","v","downloadSecurityGroups","describeSecurityGroups","grp","downloadNatGateways","describeNatGateways","NatGateways","addr","NetworkInterfaceId","iface","downloadInternetGateways","describeInternetGateways","InternetGateways","igw","Attachments","attachment","downloadAddresses","describeAddresses","Addresses","downloadAvailabilityZones","describeAvailabilityZones","AvailabilityZones","ZoneName","downloadKeyPairs","describeKeyPairs","KeyPairs","downloadNetworkInterfaces","describeNetworkInterfaces","NetworkInterfaces","ni","Association","Attachment","subnet","downloadRouteTables","gateways","Routes","route","GatewayId","DestinationCidrBlock","describeRouteTables","RouteTables","rt","RouteTableId","nat","Associations","assoc","describeTargets","targetGroup","withHealthchecks","_health","health","Target","Id","Port","TargetHealth","downloadLoadBalancers","Code","dns","_listeners","listener","_targetGroupNode","link","Protocol","describeLoadBalancers","nextALB","LoadBalancers","alb","az2","sgid","describeListeners","LoadBalancerArn","Listeners","nextListener","listenerIndex","DefaultActions","action","describeTargetHealth","healthData","TargetHealthDescriptions","downloadTargetGroups","describeTargetGroups","TargetGroups","tg","loadContainerInstancesForCluster","cluster","instanceForContainer","listContainerInstances","containerInstanceList","containerInstanceArns","containerInstances","describeContainerInstances","containerDefinitions","containerDef","ec2InstanceId","containerInstanceArn","loadServicesForCluster","clusterArn","listServices","serviceListData","serviceArns","describeServices","services","serviceDefinitions","service","serviceDef","loadBalancers","lb","targetGroupArn","loadTasksForCluster","listTasks","taskList","taskArns","tasks","describeTasks","taskDefinitions","downloadClusters","listClusters","clusterList","describeClusters","clusters","clusterArns","clusterDefinitions","nextCluster","clusterDef","pos","taskDef","taskDefinitionArn","lastIndexOf","taskName","parentOfTask","startedBy","childKey","deployments","cnt","task","taskArn","downloadDatabases","DBInstanceIdentifier","describeDBInstances","DBInstances","db","VpcSecurityGroups","sgDef","VpcSecurityGroupId","head","title","meta","charset","content","hid","css","rel","href","extractCSS","loading","color","vendor","extend","ctx","isClient","rules","enforce","test","loader","exclude","postcss","plugins","modules"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,oC;;;;;;;;;;ACAA,IAAMA,QAAQ,mBAAAC,CAAQ,CAAR,CAAd;AACA,IAAMC,QAAQ,mBAAAD,CAAQ,CAAR,CAAd;;AAEA,IAAIE,YAAY,EAAhB,C,CAAqB;;;IAGfC,O;AAEJ,mBAAYC,IAAZ,EAAkBC,EAAlB,EAAsB;AAAA;;AACpB;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,GAAL,GAAWC,WAAWH,IAAX,EAAiBC,EAAjB,CAAX;AACA,SAAKG,IAAL,GAAY,IAAZ;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;;;4BAEOH,I,EAAM;AACZ,WAAKA,IAAL,GAAYA,IAAZ;AACD;;;gCAEWI,E,EAAI;AACd;AACD;;;6BAEQC,S,EAAW;AAClB,UAAIA,aAAa,IAAjB,EAAuB;AACrB;AACA,aAAKJ,QAAL,CAAcK,IAAd,CAAmBD,UAAUP,GAA7B;AACAO,kBAAUH,OAAV,CAAkBI,IAAlB,CAAuB,KAAKR,GAA5B;AACD;AACF;;;4BAEOS,O,EAAS;AACf;AACA,UAAI,KAAKP,IAAL,IAAa,KAAKA,IAAL,CAAUQ,IAA3B,EAAiC;AAC/B,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKT,IAAL,CAAUQ,IAAV,CAAeE,MAAnC,EAA2CD,GAA3C,EAAgD;AAC9C,cAAIE,MAAM,KAAKX,IAAL,CAAUQ,IAAV,CAAeC,CAAf,CAAV;AACA,cAAIE,IAAIC,GAAJ,KAAYL,OAAhB,EAAyB;AACvB,mBAAOI,IAAIE,KAAX;AACD;AACF;AACF;AACD,aAAO,IAAP;AACD;;;8BAES;AACR,UAAIC,UAAU,aAAavB,MAAMwB,MAAN,EAAb,GAA8B,6CAA9B,GAA8ExB,MAAMwB,MAAN,EAA5F;AACA,UAAIC,UAAU,aAAazB,MAAMwB,MAAN,EAAb,GAA8B,0CAA9B,GAA2ExB,MAAMwB,MAAN,EAAzF;AACA,cAAQ,KAAKnB,IAAb;AACE,aAAKH,MAAMwB,MAAX;AACE,iBAAOD,UAAU,kBAAV,GAA+B,KAAKnB,EAA3C;AACF,aAAKJ,MAAMyB,MAAX;AACE,iBAAOJ,UAAU,0BAAV,GAAuC,KAAKjB,EAAnD;AACF,aAAKJ,MAAM0B,GAAX;AACE,iBAAOH,UAAU,eAAV,GAA4B,KAAKnB,EAAxC;AACF,aAAKJ,MAAM2B,GAAX;AACE,iBAAOJ,UAAU,sBAAV,GAAmC,KAAKnB,EAAxC,GAA6C,oBAApD;AACF,aAAKJ,MAAM4B,GAAX;AACE,iBAAOL,UAAU,eAAV,GAA4B,KAAKnB,EAAxC;AACF,aAAKJ,MAAM6B,QAAX;AACE,iBAAOR,UAAU,oBAAV,GAAiC,KAAKjB,EAA7C;AACF;AACA;AACA,aAAKJ,MAAM8B,IAAX;AACE,iBAAOT,UAAU,oBAAV,GAAiC,KAAKjB,EAA7C;AACF;AACA;AACA;AACA,aAAKJ,MAAM+B,OAAX;AACE,iBAAOV,UAAU,mBAAV,GAAgC,KAAKjB,EAA5C;AACF,aAAKJ,MAAMgC,QAAX;AACE,iBAAOX,UAAU,0BAAV,GAAuC,KAAKjB,EAAnD;AACF,aAAKJ,MAAMiC,UAAX;AACE,iBAAOV,UAAU,sBAAV,GAAmC,KAAKnB,EAA/C;AACF,aAAKJ,MAAMkC,GAAX;AACE,iBAAOb,UAAU,wBAAV,GAAqC,KAAKjB,EAAjD;AACF,aAAKJ,MAAMmC,SAAX;AACE,iBAAOd,UAAU,uBAAV,GAAoC,KAAKjB,EAAhD;AACF;AACE,iBAAO,IAAP;AA/BJ;AAiCD;;;2BAEM;AACL,UAAI,KAAKM,UAAT,EAAqB;AACnB,YAAI0B,OAAO,KAAK1B,UAAL,CAAgB,IAAhB,CAAX;AACA,YAAI0B,IAAJ,EAAU;AACRC,kBAAQC,GAAR,CAAYF,IAAZ;AACD;AACF,OALD,MAKO;AACLC,gBAAQC,GAAR,CAAY,SAAS,KAAKlC,EAA1B;AACD;AACD;AACA,WAAKI,QAAL,CAAc+B,OAAd,CAAsB,iBAAS;AAC7B;AACAF,gBAAQC,GAAR,CAAY,SAASE,MAAMpC,EAA3B;AACD,OAHD;AAID;;;sCAEiB;AAChB,UAAIqC,cAAc,IAAlB;AACA,UAAI,KAAKlC,IAAL,IAAa,KAAKA,IAAL,CAAUQ,IAA3B,EAAiC;AAC/B,aAAKR,IAAL,CAAUQ,IAAV,CAAewB,OAAf,CAAuB,eAAO;AAC5B,cAAIrB,IAAIC,GAAJ,CAAQuB,WAAR,OAA0B,aAA9B,EAA6C;AAC3CD,0BAAcvB,IAAIE,KAAlB;AACA;AACD;AACF,SALD;AAMD;AACD,aAAOqB,WAAP;AACD;;;4BAEO;AACN,UAAIE,QAAQ,IAAZ;AACA,UAAI,KAAKpC,IAAT,EAAe;AACb,YAAI,KAAKA,IAAL,CAAUQ,IAAd,EAAoB;AAClB,eAAKR,IAAL,CAAUQ,IAAV,CAAewB,OAAf,CAAuB,eAAO;AAC5B,gBAAIrB,IAAIC,GAAJ,CAAQuB,WAAR,OAA0B,MAA9B,EAAsC;AACpCC,sBAAQzB,IAAIE,KAAZ;AACD;AACF,WAJD;AAKD;AACD,YAAI,CAACuB,KAAD,IAAU,KAAKpC,IAAL,CAAU,KAAV,CAAd,EAAgC;AAC9BoC,kBAAQ,KAAKpC,IAAL,CAAU,KAAV,CAAR;AACD;AACF;AACD,UAAI,CAACoC,KAAL,EAAY;AACVA,gBAAQ,KAAKvC,EAAb;AACD;AACD,aAAOuC,KAAP;AACD,K,CAAA;;;;;KAEF;;AAED,SAASC,KAAT,GAAiB;AACf3C,cAAY,EAAZ;AACD;;AAED,SAASK,UAAT,CAAoBH,IAApB,EAA0BC,EAA1B,EAA8B;AAC5B,SAAOD,OAAO,IAAP,GAAcC,EAArB;AACD;;AAED,SAASyC,WAAT,CAAqBxC,GAArB,EAA0B;AACxB,MAAIyC,OAAO7C,UAAUI,GAAV,CAAX;AACA,SAAOyC,IAAP;AACD;;AAED,SAASC,QAAT,CAAkB5C,IAAlB,EAAwBC,EAAxB,EAA4BG,IAA5B,EAAkCG,UAAlC,EAA8C;AAC5C;AACA;AACA;;AAEA,MAAIL,MAAMC,WAAWH,IAAX,EAAiBC,EAAjB,CAAV;AACA,MAAI0C,OAAO7C,UAAUI,GAAV,CAAX;AACA,MAAI,CAACyC,IAAL,EAAW;AACTA,WAAO,IAAI5C,OAAJ,CAAYC,IAAZ,EAAkBC,EAAlB,CAAP;AACAH,cAAUI,GAAV,IAAiByC,IAAjB;AACD;AACD,MAAIvC,IAAJ,EAAU;AACRuC,SAAKE,OAAL,CAAazC,IAAb;AACD;AACD,MAAIG,UAAJ,EAAgB;AACd2B,YAAQC,GAAR,4BAAqCnC,IAArC;AACA2C,SAAKG,WAAL,CAAiBvC,UAAjB;AACD;AACD,SAAOoC,IAAP;AACD;;AAED,SAASI,OAAT,GAAmB;AACjBb,UAAQC,GAAR,CAAY,SAAZ;AACA;AACA,OAAK,IAAIjC,GAAT,IAAgBJ,SAAhB,EAA2B;AACzBoC,YAAQC,GAAR,CAAY,EAAZ;AACA;AACA,QAAIQ,OAAO7C,UAAUI,GAAV,CAAX;AACAyC,SAAKK,IAAL;AACD;AACF;;AAED,SAASC,QAAT,GAAoB;AAClB,SAAOnD,SAAP;AACD;;AAED,SAASoD,OAAT,GAAmB;AACjB,MAAIC,OAAO,EAAX;AACA,OAAK,IAAIjD,GAAT,IAAgBJ,SAAhB,EAA2B;AACzBqD,SAAKzC,IAAL,CAAUR,GAAV;AACD;AACD,SAAOiD,IAAP;AACD;;AAED,SAASC,QAAT,GAAoB;AAClB,MAAIC,QAAQ,EAAZ;AACA,OAAK,IAAInD,GAAT,IAAgBJ,SAAhB,EAA2B;AACzB,QAAI6C,OAAO7C,UAAUI,GAAV,CAAX;AACAmD,UAAM3C,IAAN,CAAWiC,IAAX;AACD;AACD,SAAOU,KAAP;AACD;;AAED,SAASC,WAAT,CAAqBtD,IAArB,EAA2B;AACzB;AACA,MAAIuD,MAAMH,WAAWI,MAAX,CAAkB;AAAA,WAAQb,KAAK3C,IAAL,KAAcA,IAAtB;AAAA,GAAlB,CAAV;AACA,SAAOyD,eAAeF,GAAf,CAAP;AACD;;AAED,SAASE,cAAT,CAAwBF,GAAxB,EAA6B;AAC3B,MAAIG,SAASH,IAAII,IAAJ,CAAS,UAACC,CAAD,EAAGC,CAAH,EAAS;;AAE7B;AACA,QAAIC,OAAOF,EAAEG,eAAF,EAAX;AACA,QAAI,CAACD,IAAL,EAAWA,OAAO,YAAP;AACX,QAAIE,OAAOH,EAAEE,eAAF,EAAX;AACA,QAAI,CAACC,IAAL,EAAWA,OAAO,YAAP;AACX,QAAIF,OAAOE,IAAX,EAAiB;AACf,aAAO,CAAC,CAAR;AACD,KAFD,MAEO,IAAIF,OAAOE,IAAX,EAAiB;AACtB,aAAO,CAAP;AACD;;AAED;AACA,QAAIJ,EAAE3D,EAAF,GAAO4D,EAAE5D,EAAb,EAAiB;AACf,aAAO,CAAC,CAAR;AACD,KAFD,MAEO,IAAI2D,EAAE3D,EAAF,GAAO4D,EAAE5D,EAAb,EAAiB;AACtB,aAAO,CAAP;AACD;AACD,WAAO,CAAP;AACD,GApBY,CAAb;AAqBA,SAAOyD,MAAP;AACD;;AAED;AACA;AACA;AACA;;AAEA;;;AAGA,SAASO,YAAT,GAAwB;AACtB;AACA,MAAIC,MAAM,EAAV;AACAd,aAAWhB,OAAX,CAAmB,gBAAQ;AACzB,QAAIE,cAAcK,KAAKoB,eAAL,EAAlB;AACA,QAAIzB,WAAJ,EAAiB;AACf4B,UAAI5B,WAAJ,IAAmBA,WAAnB;AACD;AACF,GALD;AAMA;AACA,MAAI6B,OAAO,EAAX;AACA,OAAK,IAAIjE,GAAT,IAAgBgE,GAAhB,EAAqB;AACnBC,SAAKzD,IAAL,CAAUR,GAAV;AACD;AACD;AACAiE,OAAKR,IAAL,CAAU,UAACC,CAAD,EAAGC,CAAH,EAAS;AACjB,QAAID,IAAIC,CAAR,EAAW;AACT,aAAO,CAAC,CAAR;AACD,KAFD,MAEO,IAAID,IAAIC,CAAR,EAAW;AAChB,aAAO,CAAC,CAAR;AACD,KAFM,MAEA;AACL,aAAO,CAAP;AACD;AACF,GARD;AASA,SAAOM,IAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAC,OAAOC,OAAP,CAAezB,QAAf,GAA0BA,QAA1B;AACAwB,OAAOC,OAAP,CAAe3B,WAAf,GAA6BA,WAA7B;AACA0B,OAAOC,OAAP,CAAetB,OAAf,GAAyBA,OAAzB;AACAqB,OAAOC,OAAP,CAAelE,UAAf,GAA4BA,UAA5B;AACAiE,OAAOC,OAAP,CAAe5B,KAAf,GAAuBA,KAAvB;AACA2B,OAAOC,OAAP,CAAeC,KAAf,GAAuBrB,QAAvB;AACAmB,OAAOC,OAAP,CAAelB,IAAf,GAAsBD,OAAtB;AACAkB,OAAOC,OAAP,CAAehB,KAAf,GAAuBD,QAAvB;AACAgB,OAAOC,OAAP,CAAef,WAAf,GAA6BA,WAA7B;AACAc,OAAOC,OAAP,CAAeJ,YAAf,GAA8BA,YAA9B,C;;;;;;ACjTA,IAAMM,MAAM,mBAAA3E,CAAQ,CAAR,CAAZ;AACA,IAAM4E,aAAa,mBAAA5E,CAAQ,EAAR,CAAnB;AACA,IAAM6E,MAAM,mBAAA7E,CAAQ,EAAR,EAAkB6E,GAA9B;;AAEA,IAAMC,iBAAiB,gBAAvB;AACA,IAAIC,UAAU,EAAd;AACA,IAAIC,gBAAgBF,cAApB;AACA;AACA,IAAIG,YAAY,IAAhB,C,CAAqB;;AAErB,IAAIC,iBAAiB,IAArB;AACA,IAAIC,MAAM,IAAV;AACA,IAAIC,QAAQ,IAAZ;AACA,IAAIC,cAAc,IAAlB;AACA,IAAIC,MAAM,IAAV;AACA,IAAIC,MAAM,IAAV;;AAEA,SAASC,eAAT,CAA0BC,QAA1B,EAAoC;AAClCnD,UAAQC,GAAR,CAAY,qBAAZ;AACA4C,MAAIO,eAAJ,CAAoB,EAApB,EAAwB,UAACC,GAAD,EAAMnF,IAAN,EAAe;AACrC,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAETZ,cAAUvE,KAAKoF,OAAf,CAHqC,CAGd;AACvB;AACAb,cAAUA,QAAQhB,IAAR,CAAa,UAAC8B,EAAD,EAAKC,EAAL,EAAY;AACjC,UAAID,GAAGE,UAAH,GAAgBD,GAAGC,UAAvB,EAAmC;AACjC,eAAO,CAAC,CAAR;AACD,OAFD,MAEO,IAAIF,GAAGE,UAAH,GAAgBD,GAAGC,UAAvB,EAAmC;AACxC,eAAO,CAAC,CAAR;AACD;AACD,aAAO,CAAP;AACD,KAPS,CAAV;AAQA,WAAON,SAAS,IAAT,CAAP;AACD,GAdD;AAeD;;AAED;AACA;AACA,SAASO,iBAAT,CAA4BC,UAA5B,EAAwC;AACtC3D,UAAQC,GAAR,CAAY,uBAAuB0D,UAAvB,GAAoC,GAAhD;AACA,MAAI1E,SAASqD,WAAWsB,GAAX,CAAeD,UAAf,CAAb;AACA,MAAI1E,MAAJ,EAAY;AACV;AACA,WAAOA,OAAO4E,IAAd;AACD;AACD,SAAO,EAAP;AACD;;AAED,SAASC,WAAT,GAAwB;AACtB,OAAK,IAAID,IAAT,IAAiBvB,WAAWG,OAA5B,EAAqC;AACnC,QAAIsB,IAAIzB,WAAWG,OAAX,CAAmBoB,IAAnB,CAAR;AACA,QAAIE,EAAEC,MAAN,EAAc;AACZhE,cAAQC,GAAR,CAAesC,IAAIsB,IAAJ,EAAU,EAAV,CAAf,UAAiCE,EAAEE,IAAnC;AACD;AACF;AACF;;AAED,SAASC,cAAT,CAAyBjF,MAAzB,EAAiC;AAC/B;;AAEA,MAAI,CAACA,MAAL,EAAa;AACX;AACAA,aAASuD,cAAT;AACD;;AAED;AACA;AACA,MAAIvD,WAAW,GAAX,IAAkBA,WAAW,MAA7B,IAAuCA,WAAW,SAAtD,EAAiE;AAC/D6E;AACAK,YAAQC,IAAR,CAAa,CAAb;AACD;;AAED;AACA,OAAK,IAAIP,IAAT,IAAiBvB,WAAWG,OAA5B,EAAqC;AACnC,QAAIxD,OAAOoB,WAAP,OAAyBwD,KAAKQ,SAAL,CAAe,CAAf,EAAkBpF,OAAOL,MAAzB,CAA7B,EAA+D;AAC7DK,eAASqD,WAAWG,OAAX,CAAmBoB,IAAnB,EAAyBI,IAAlC;AACA;AACD;AACF;;AAED;AACA,MAAIF,IAAIzB,WAAWsB,GAAX,CAAe3E,MAAf,CAAR;AACA,MAAI,CAAC8E,CAAL,EAAQ;AACN/D,YAAQC,GAAR,CAAY,2BAA2BhB,MAAvC;AACAkF,YAAQC,IAAR,CAAa,CAAb;AACD;;AAED,MAAIzB,cAAc1D,MAAlB,EAA0B;AACxB;AACA;AACA0D,gBAAYD,gBAAgBzD,MAA5B;AACA2D,qBAAiB,IAAIP,IAAIiC,cAAR,CAAuB;AACtCC,kBAAY,YAD0B;AAEtCtF,cAAQyD;AAF8B,KAAvB,CAAjB;AAIAG,UAAM,IAAIR,IAAImC,GAAR,CAAY;AAChBD,kBAAY,YADI;AAEhBtF,cAAQyD;AAFQ,KAAZ,CAAN;AAIAI,YAAQ,IAAIT,IAAIoC,KAAR,CAAc;AACpBF,kBAAY,YADQ;AAEpBtF,cAAQyD;AAFY,KAAd,CAAR;AAIAK,kBAAc,IAAIV,IAAIqC,WAAR,CAAoB;AAChCH,kBAAY,YADoB;AAEhCtF,cAAQyD;AAFwB,KAApB,CAAd;AAIAM,UAAM,IAAIX,IAAIsC,GAAR,CAAY;AAChBJ,kBAAY,YADI;AAEhBtF,cAAQyD;AAFQ,KAAZ,CAAN;AAIAO,UAAM,IAAIZ,IAAIuC,GAAR,CAAY;AAChBL,kBAAY,YADI;AAEhBtF,cAAQyD;AAFQ,KAAZ,CAAN;AAID;;AAED,SAAOA,aAAP;AACD;;AAEDR,OAAOC,OAAP,CAAeS,cAAf,GAAgC,YAAY;AAC1C,SAAOA,cAAP;AACD,CAFD;;AAIAV,OAAOC,OAAP,CAAeU,GAAf,GAAqB,YAAY;AAC/B,SAAOA,GAAP;AACD,CAFD;;AAIAX,OAAOC,OAAP,CAAea,GAAf,GAAqB,YAAY;AAC/B,SAAOA,GAAP;AACD,CAFD;;AAIAd,OAAOC,OAAP,CAAec,GAAf,GAAqB,YAAY;AAC/B,SAAOA,GAAP;AACD,CAFD;;AAIAf,OAAOC,OAAP,CAAeW,KAAf,GAAuB,YAAY;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIAZ,OAAOC,OAAP,CAAeY,WAAf,GAA6B,YAAY;AACvC,SAAOA,WAAP;AACD,CAFD;;AAIAb,OAAOC,OAAP,CAAelD,MAAf,GAAwB,YAAY;AAClC,SAAOyD,aAAP;AACD,CAFD;;AAIAR,OAAOC,OAAP,CAAeM,OAAf,GAAyB,YAAY;AACnC,SAAOA,OAAP;AACD,CAFD;AAGAP,OAAOC,OAAP,CAAe+B,cAAf,GAAgCA,cAAhC;AACAhC,OAAOC,OAAP,CAAeuB,iBAAf,GAAmCA,iBAAnC;AACAxB,OAAOC,OAAP,CAAee,eAAf,GAAiCA,eAAjC;;AAEAhB,OAAOC,OAAP,CAAeK,cAAf,GAAgCA,cAAhC,C;;;;;;AC3JA;AACAN,OAAOC,OAAP,CAAehD,MAAf,GAAwB,QAAxB;AACA+C,OAAOC,OAAP,CAAe/C,MAAf,GAAwB,gBAAxB;AACA8C,OAAOC,OAAP,CAAe9C,GAAf,GAAqB,uBAArB;AACA6C,OAAOC,OAAP,CAAe7C,GAAf,GAAqB,aAArB;AACA4C,OAAOC,OAAP,CAAe5C,GAAf,GAAqB,kBAArB;AACA2C,OAAOC,OAAP,CAAe3C,QAAf,GAA0B,cAA1B,C,CAAyC;AACzC0C,OAAOC,OAAP,CAAe0C,KAAf,GAAuB,WAAvB;AACA3C,OAAOC,OAAP,CAAe2C,EAAf,GAAoB,mBAApB;AACA5C,OAAOC,OAAP,CAAe1C,IAAf,GAAsB,YAAtB;AACAyC,OAAOC,OAAP,CAAe4C,MAAf,GAAwB,WAAxB;AACA7C,OAAOC,OAAP,CAAe6C,OAAf,GAAyB,kBAAzB;AACA9C,OAAOC,OAAP,CAAe8C,QAAf,GAA0B,mBAA1B;AACA/C,OAAOC,OAAP,CAAezC,OAAf,GAAyB,UAAzB;AACAwC,OAAOC,OAAP,CAAexC,QAAf,GAA0B,mBAA1B;AACAuC,OAAOC,OAAP,CAAevC,UAAf,GAA4B,aAA5B;AACAsC,OAAOC,OAAP,CAAetC,GAAf,GAAqB,eAArB;AACAqC,OAAOC,OAAP,CAAerC,SAAf,GAA2B,cAA3B;AACAoC,OAAOC,OAAP,CAAe+C,QAAf,GAA0B,UAA1B;AACAhD,OAAOC,OAAP,CAAegD,IAAf,GAAsB,MAAtB;AACAjD,OAAOC,OAAP,CAAeiD,OAAf,GAAyB,SAAzB;AACAlD,OAAOC,OAAP,CAAekD,OAAf,GAAyB,SAAzB;AACAnD,OAAOC,OAAP,CAAemD,IAAf,GAAsB,MAAtB;AACApD,OAAOC,OAAP,CAAeoD,QAAf,GAA0B,UAA1B;AACArD,OAAOC,OAAP,CAAeqD,KAAf,GAAuB,OAAvB;;AAEAtD,OAAOC,OAAP,CAAepE,EAAf,GAAoB,UAAU0C,IAAV,EAAgB;AAClC,MAAI,CAACA,KAAKvC,IAAV,EAAgB;AACd,WAAO,GAAP;AACD;AACD,UAAQuC,KAAK3C,IAAb;AACE,SAAK,KAAKqB,MAAV;AACE,aAAOsB,KAAKvC,IAAL,CAAUuH,QAAjB;;AAEF,SAAK,KAAKrG,MAAV;AACE,aAAOqB,KAAKvC,IAAL,CAAUwH,OAAjB;;AAEF,SAAK,KAAKrG,GAAV;AACE,aAAOoB,KAAKvC,IAAL,CAAUyH,KAAjB;;AAEF,SAAK,KAAKrG,GAAV;AACE,aAAOmB,KAAKvC,IAAL,GAAYuC,KAAKvC,IAAL,CAAU0H,YAAtB,GAAqC,GAA5C;;AAEF,SAAK,KAAKrG,GAAV;AACE,aAAOkB,KAAKvC,IAAL,CAAU2H,iBAAjB;;AAEF,SAAK,KAAKrG,QAAV;AACE,aAAOiB,KAAKvC,IAAL,CAAU4H,UAAjB;;AAEF,SAAK,KAAKjB,KAAV;AACE,aAAOpE,KAAK1C,EAAZ;;AAEF,SAAK,KAAK+G,EAAV;AACE,aAAOrE,KAAK1C,EAAZ;;AAEF,SAAK,KAAK0B,IAAV;AACE,aAAOgB,KAAKvC,IAAL,CAAU6H,YAAjB;;AAEF,SAAK,KAAKhB,MAAV;AACE,aAAOtE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKgH,OAAV;AACE,aAAOvE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKiH,QAAV;AACE,aAAOxE,KAAK1C,EAAZ;;AAEF,SAAK,KAAK2B,OAAV;AACE,aAAOe,KAAKzC,GAAZ;;AAEF,SAAK,KAAK2B,QAAV;AACE,aAAOc,KAAK1C,EAAZ;;AAEF,SAAK,KAAK6B,UAAV;AACE,aAAOa,KAAKzC,GAAL,GAAW,MAAX,GAAoByC,KAAKuF,eAAhC;;AAEF,SAAK,KAAKnG,GAAV;AACE,aAAOY,KAAK1C,EAAZ;;AAEF,SAAK,KAAK+B,SAAV;AACE,aAAOW,KAAKvC,IAAL,CAAU+H,eAAjB;;AAEF,SAAK,KAAKf,QAAV;AACE,aAAOzE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKmH,IAAV;AACE,aAAO1E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKoH,OAAV;AACE,aAAO3E,KAAKvC,IAAL,CAAUgI,WAAjB;;AAEF,SAAK,KAAKb,OAAV;AACE,aAAO5E,KAAKvC,IAAL,CAAUiI,WAAjB;;AAEF,SAAK,KAAKb,IAAV;AACE,aAAO7E,KAAK1C,EAAZ;;AAEF,SAAK,KAAKwH,QAAV;AACE,aAAO9E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwH,KAAV;AACE,aAAO/E,KAAKzC,GAAZ;;AAEF;AACE,aAAOyC,KAAKzC,GAAZ;AA1EJ;AA4ED,CAhFD;;AAkFAkE,OAAOC,OAAP,CAAe7B,KAAf,GAAuB,UAAUG,IAAV,EAAgB;AACrC;AACA,MAAIoD,aAAJ;AACA,UAAQpD,KAAK3C,IAAb;AACE,SAAK,KAAKqB,MAAV;AACE0E,aAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAP;AACA,aAAOoD,QAAQpD,KAAKvC,IAAL,CAAUuH,QAAzB;;AAEF,SAAK,KAAKrG,MAAV;AACE;AACA;AACA;AACA;AACAyE,aAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAP;AACA,aAAOoD,QAAQpD,KAAKvC,IAAL,CAAUmI,SAAzB;;AAEF,SAAK,KAAKhH,GAAV;AACEwE,aAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAP;AACA,aAAOoD,QAAQpD,KAAKzC,GAApB;;AAEF,SAAK,KAAKsB,GAAV;AACEuE,aAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAP;AACA,UAAIoD,IAAJ,EAAU;AACR,eAAOA,IAAP;AACD;AACD,UAAIpD,KAAKvC,IAAT,EAAe;AACb,eAAOuC,KAAKvC,IAAL,CAAU0H,YAAjB;AACD;AACD,aAAO,GAAP;;AAEF,SAAK,KAAKrG,GAAV;AACE,aAAOkB,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwB,QAAV;AACEqE,aAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAP;AACA,aAAOoD,QAAQpD,KAAKzC,GAApB;;AAEF,SAAK,KAAK6G,KAAV;AACE,aAAOpE,KAAKzC,GAAZ;;AAEF,SAAK,KAAK8G,EAAV;AACE,aAAOrE,KAAK1C,EAAZ;;AAEF,SAAK,KAAK0B,IAAV;AACE,0BAAkBgB,KAAKvC,IAAL,CAAUoI,QAA5B;;AAEF,SAAK,KAAKvB,MAAV;AACE,aAAOtE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKgH,OAAV;AACE,aAAOvE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKiH,QAAV;AACE,aAAOxE,KAAK1C,EAAZ;;AAEF,SAAK,KAAK2B,OAAV;AACE,aAAOe,KAAKzC,GAAZ;;AAEF,SAAK,KAAK2B,QAAV;AACE,8BAAsBc,KAAKvC,IAAL,CAAUqI,gBAAhC;;AAEF,SAAK,KAAK3G,UAAV;AACE,aAAOa,KAAKzC,GAAL,GAAW,MAAX,GAAoByC,KAAKuF,eAAhC;;AAEF,SAAK,KAAKnG,GAAV;AACE,aAAOY,KAAKvC,IAAL,CAAUsI,gBAAjB;;AAEF,SAAK,KAAK1G,SAAV;AACE,aAAOW,KAAKvC,IAAL,CAAU+H,eAAjB;;AAEF,SAAK,KAAKf,QAAV;AACE,aAAOzE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKmH,IAAV;AACE,aAAO1E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKoH,OAAV;AACE,aAAO3E,KAAKvC,IAAL,CAAUgI,WAAjB;;AAEF,SAAK,KAAKb,OAAV;AACE,aAAO5E,KAAKvC,IAAL,CAAUiI,WAAjB;;AAEF,SAAK,KAAKb,IAAV;AACE,UAAI7E,KAAKvC,IAAL,CAAUuI,UAAV,IAAwBhG,KAAKvC,IAAL,CAAUuI,UAAV,CAAqB7H,MAArB,GAA8B,CAA1D,EAA6D;AAC3D,eAAO6B,KAAKvC,IAAL,CAAUuI,UAAV,CAAqB,CAArB,EAAwB5C,IAA/B;AACD;AACD,aAAO,GAAP;;AAEF,SAAK,KAAK0B,QAAV;AACE,aAAO9E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwH,KAAV;AACE,aAAO/E,KAAKzC,GAAZ;;AAEF;AACE,aAAOyC,KAAKzC,GAAZ;AA5FJ;AA8FD,CAjGD;;AAmGAkE,OAAOC,OAAP,CAAeuE,WAAf,GAA6B,UAAUjG,IAAV,EAAgB;AAC3C,UAAQA,KAAK3C,IAAb;AACE,SAAK,KAAKqB,MAAV;AACE,aAAOsB,KAAKvC,IAAL,CAAUyI,SAAjB;;AAEF,SAAK,KAAKvH,MAAV;AACE,aAAOqB,KAAKvC,IAAL,CAAU0I,WAAjB;;AAEF,SAAK,KAAKvH,GAAV;AACE,aAAOoB,KAAKvC,IAAL,CAAU2I,KAAjB;;AAEF,SAAK,KAAKvH,GAAV;AACE,UAAImB,KAAKvC,IAAT,EAAe;AACb,+BAAqBuC,KAAKvC,IAAL,CAAU4I,mBAAV,CAA8B,CAA9B,EAAiCR,QAAtD;AACD;AACDtG,cAAQC,GAAR,CAAY,uCAAZ,EAAqDQ,IAArD;AACA,aAAO,GAAP;;AAEF,SAAK,KAAKlB,GAAV;AACE,aAAOkB,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwB,QAAV;AACE,aAAO,EAAP;;AAEF,SAAK,KAAKqF,KAAV;AACE,aAAOpE,KAAKzC,GAAZ;;AAEF,SAAK,KAAK8G,EAAV;AACE,aAAO,GAAP;;AAEF,SAAK,KAAKrF,IAAV;AACE,2BAAmBgB,KAAKvC,IAAL,CAAUqI,gBAA7B;;AAEF,SAAK,KAAKxB,MAAV;AACE,aAAOtE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKgH,OAAV;AACE,aAAOvE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKiH,QAAV;AACE,aAAO,EAAP;;AAEF,SAAK,KAAKvF,OAAV;AACE,aAAOe,KAAKzC,GAAZ;;AAEF,SAAK,KAAK2B,QAAV;AACE,aAAO,GAAP;;AAEF,SAAK,KAAKC,UAAV;AACE,aAAOa,KAAKzC,GAAZ;;AAEF,SAAK,KAAK6B,GAAV;AACE,aAAOY,KAAKvC,IAAL,CAAU6I,OAAjB;;AAEF,SAAK,KAAKjH,SAAV;AACE,aAAO,GAAP;;AAEF,SAAK,KAAKoF,QAAV;AACE,aAAOzE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKmH,IAAV;AACE,aAAO1E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKoH,OAAV;AACE,aAAU3E,KAAKvC,IAAL,CAAU8I,MAAV,CAAiB3G,WAAjB,EAAV,UAA6CI,KAAKvC,IAAL,CAAU+I,iCAAvD,oBAAuGxG,KAAKvC,IAAL,CAAUgJ,iBAAjH;;AAEF,SAAK,KAAK7B,OAAV;AACE,aAAU5E,KAAKvC,IAAL,CAAU8I,MAAV,CAAiB3G,WAAjB,EAAV,UAA6CI,KAAKvC,IAAL,CAAUiJ,YAAvD;;AAEF,SAAK,KAAK7B,IAAV;AACE,0BAAkB7E,KAAKvC,IAAL,CAAUkJ,OAA5B,UAAwC3G,KAAKvC,IAAL,CAAUmJ,UAAV,CAAqBhH,WAArB,EAAxC;;AAEF,SAAK,KAAKkF,QAAV;AACE,aAAO9E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwH,KAAV;AACE,aAAO/E,KAAKzC,GAAZ;;AAEF;AACE,kCAA0ByC,KAAKzC,GAA/B;AA9EJ;AAgFD,CAjFD;;AAmFAkE,OAAOC,OAAP,CAAemF,QAAf,GAA0B,UAAU7G,IAAV,EAAgB;AACxC,UAAQA,KAAK3C,IAAb;AACE,SAAK,KAAKqB,MAAV;AACE,aAAOoI,eAAe9G,IAAf,CAAP;;AAEF,SAAK,KAAKrB,MAAV;AACE,aAAOoI,sBAAsB/G,IAAtB,CAAP;;AAEF,SAAK,KAAKpB,GAAV;AACE,aAAOoI,YAAYhH,IAAZ,CAAP;;AAEF,SAAK,KAAKnB,GAAV;AACE,aAAOmB,KAAKzC,GAAZ;;AAEF,SAAK,KAAKuB,GAAV;AACE,aAAOkB,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwB,QAAV;AACE,aAAOkI,iBAAiBjH,IAAjB,CAAP;;AAEF,SAAK,KAAKoE,KAAV;AACE,aAAOpE,KAAKzC,GAAZ;;AAEF,SAAK,KAAK8G,EAAV;AACE,aAAOrE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKyB,IAAV;AACE,aAAOgB,KAAKzC,GAAZ;;AAEF,SAAK,KAAK+G,MAAV;AACE,aAAOtE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKgH,OAAV;AACE,aAAOvE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKiH,QAAV;AACE,+CAAuCxE,KAAK1C,EAA5C;;AAEF,SAAK,KAAK2B,OAAV;AACE,aAAOe,KAAKzC,GAAZ;;AAEF,SAAK,KAAK2B,QAAV;AACE,aAAOc,KAAKzC,GAAZ;;AAEF,SAAK,KAAK4B,UAAV;AACE,aAAOa,KAAKzC,GAAZ;;AAEF,SAAK,KAAK6B,GAAV;AACE,aAAOY,KAAKzC,GAAZ;;AAEF,SAAK,KAAK8B,SAAV;AACE,oEAEUW,KAAKvC,IAAL,CAAU+H,eAFpB,mCAGiBxF,KAAKvC,IAAL,CAAUyJ,eAH3B,sCAIoBlH,KAAKvC,IAAL,CAAU0J,OAAV,CAAkBC,QAJtC;;AAMF,SAAK,KAAK3C,QAAV;AACE,aAAOzE,KAAKzC,GAAZ;;AAEF,SAAK,KAAKmH,IAAV;AACE,aAAO1E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKoH,OAAV;AACE,aAAO3E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKqH,OAAV;AACE,+DAEU5E,KAAKvC,IAAL,CAAUiI,WAFpB,8BAGY1F,KAAKvC,IAAL,CAAU8I,MAHtB,6BAIWvG,KAAKvC,IAAL,CAAUiJ,YAJrB;;AAMF,SAAK,KAAK7B,IAAV;AACE,aAAOwC,aAAarH,IAAb,CAAP;;AAEF,SAAK,KAAK8E,QAAV;AACE,aAAO9E,KAAKzC,GAAZ;;AAEF,SAAK,KAAKwH,KAAV;AACE,aAAO/E,KAAKzC,GAAZ;;AAEF;AACE,aAAOyC,KAAKzC,GAAZ;AAlFJ;AAoFD,CArFD;;AAuFA,SAAS0J,gBAAT,CAA2BjH,IAA3B,EAAiC;AAC/B,MAAIV,OAAO,0BAAX;AACA,MAAI8D,OAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAX;AACA,MAAIoD,IAAJ,EAAU;AACR9D,YAAQ,aAAa8D,IAAb,GAAoB,MAA5B;AACD;AACD,MAAI6C,cAAcN,QAAQ3F,IAAR,EAAc,aAAd,CAAlB;AACA,MAAIiG,WAAJ,EAAiB;AACf3G,YAAQ,oBAAoB2G,WAApB,GAAkC,MAA1C;AACD;AACD3G,qBAAiBU,KAAKvC,IAAL,CAAU6J,YAA3B;AACAhI,wBAAoBU,KAAKvC,IAAL,CAAU8J,OAA9B;AACAjI,sBAAkBU,KAAKvC,IAAL,CAAU2I,KAAV,CAAgBoB,IAAlC;AACA,MAAIxH,KAAKvC,IAAL,CAAUgK,eAAd,EAA+B;AAC7BnI,YAAQ,gBAAgBU,KAAKvC,IAAL,CAAUgK,eAA1B,GAA4C,MAApD;AACD;AACD,SAAOnI,IAAP;AACD;;AAED,SAAS0H,WAAT,CAAsBhH,IAAtB,EAA4B;AAC1B,MAAI0H,IAAI,yCAAR;AACA,MAAItE,OAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAX;AACA,MAAIoD,IAAJ,EAAU;AACRsE,SAAK,aAAatE,IAAb,GAAoB,MAAzB;AACD;AACDsE,OAAK,WAAW1H,KAAKvC,IAAL,CAAUyH,KAArB,GAA6B,MAAlC;AACAwC,mBAAe1H,KAAKvC,IAAL,CAAU2I,KAAzB;AACA,MAAIuB,UAAUhC,QAAQ3F,IAAR,EAAc,SAAd,CAAd;AACA,MAAI2H,OAAJ,EAAa;AACXD,SAAK,gBAAgBC,OAAhB,GAA0B,MAA/B;AACD;AACD,SAAOD,CAAP;AACD;;AAED,SAASZ,cAAT,CAAyB9G,IAAzB,EAA+B;AAAA;;AAC7B;AACA,MAAIV,gBAAcU,KAAKvC,IAAL,CAAUuH,QAAxB,UAAJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI5B,OAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAX;AACA,MAAIoD,IAAJ,EAAU;AACR9D,sBAAgB8D,IAAhB;AACD;;AAED,MAAI6C,cAAcN,QAAQ3F,IAAR,EAAc,aAAd,CAAlB;AACA,MAAIiG,WAAJ,EAAiB;AACf3G,8BAAwB2G,WAAxB;AACD;;AAED;AACA,MAAI2B,mBAAmB,IAAvB;AACA5H,OAAKrC,OAAL,CAAa8B,OAAb,CAAqB,kBAAU;AAC7B,QAAIoI,OAAOxK,IAAP,KAAgB,MAAK8B,UAAzB,EAAqC;AACnCyI,yBAAmB,KAAnB;AACD;AACF,GAJD;AAKA,MAAIA,gBAAJ,EAAsB;AACpBtI,YAAQ,sCAAR;AACD;AACD;AACAA,0BAAsBU,KAAKvC,IAAL,CAAUyI,SAAhC;AACA,SAAO5G,IAAP;AACD;;AAED,SAASyH,qBAAT,CAAgC/G,IAAhC,EAAsC;AACpC;AACA,MAAIV,4BAAJ;AACAA,mBAAeU,KAAKvC,IAAL,CAAUwH,OAAzB;AACA,MAAI7B,OAAOuC,QAAQ3F,IAAR,EAAc,MAAd,CAAX;AACA,MAAIoD,IAAJ,EAAU;AACR9D,2BAAqB8D,IAArB;AACD;AACD9D,4BAAwBU,KAAKvC,IAAL,CAAU0I,WAAlC;AACA7G,0BAAsBU,KAAKvC,IAAL,CAAUmI,SAAhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOtG,IAAP;AACD;;AAED,SAAS+H,YAAT,CAAuBrH,IAAvB,EAA6B;AAC3B,MAAIV,yBAAJ;AACAU,OAAKvC,IAAL,CAAUuI,UAAV,CAAqBvG,OAArB,CAA6B,aAAK;AAChCH,+BACUwI,EAAE1E,IADZ,2BAEW0E,EAAEC,eAAF,CAAkBC,QAF7B,eAE+CF,EAAEC,eAAF,CAAkBE,IAFjE;AAGD,GAJD;AAKA3I,8BACaU,KAAKvC,IAAL,CAAUkJ,OADvB,0BAEY3G,KAAKvC,IAAL,CAAUmJ,UAFtB,kCAGoB5G,KAAKvC,IAAL,CAAUyK,aAH9B,0BAIYlI,KAAKvC,IAAL,CAAU0K,MAJtB,uBAKSnI,KAAKvC,IAAL,CAAU2K,GALnB;AAOA,SAAO9I,IAAP;AACD;;AAED,SAASqG,OAAT,CAAkB3F,IAAlB,EAAwBhC,OAAxB,EAAiC;AAC/B;AACA,MAAIgC,KAAKvC,IAAL,IAAauC,KAAKvC,IAAL,CAAUQ,IAA3B,EAAiC;AAC/B,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI8B,KAAKvC,IAAL,CAAUQ,IAAV,CAAeE,MAAnC,EAA2CD,GAA3C,EAAgD;AAC9C,UAAIE,MAAM4B,KAAKvC,IAAL,CAAUQ,IAAV,CAAeC,CAAf,CAAV;AACA,UAAIE,IAAIC,GAAJ,KAAYL,OAAhB,EAAyB;AACvB,eAAOI,IAAIE,KAAX;AACD;AACF;AACF;AACD,SAAO,EAAP;AACD;AACDmD,OAAOC,OAAP,CAAeiE,OAAf,GAAyBA,OAAzB,C;;;;;;;;;;;;;AC5fA;AACA;;AAEA;;AAEA,IAAM0C,MAAM,+CAAAC,EAAZ;AACA,IAAMC,OAAO7E,QAAQ8E,GAAR,CAAYC,IAAZ,IAAoB,WAAjC;AACA,IAAMR,OAAOvE,QAAQ8E,GAAR,CAAYE,IAAZ,IAAoB,IAAjC;;AAEAL,IAAIM,GAAJ,CAAQ,MAAR,EAAgBV,IAAhB;;AAEA;AACAI,IAAIO,GAAJ,CAAQ,MAAR,EAAgB,qDAAhB;;AAEA;AACA,IAAIC,SAAS,mBAAA5L,CAAQ,EAAR,CAAb;AACA4L,OAAOC,GAAP,GAAa,EAAE,kBAAyB,YAA3B,CAAb;;AAEA;AACA,IAAMC,OAAO,IAAI,0CAAJ,CAASF,MAAT,CAAb;;AAEA;AACA,IAAIA,OAAOC,GAAX,EAAgB;AACd,MAAME,UAAU,IAAI,6CAAJ,CAAYD,IAAZ,CAAhB;AACAC,UAAQC,KAAR;AACD;;AAED;AACAZ,IAAIO,GAAJ,CAAQG,KAAKG,MAAb;;AAEA;AACAb,IAAIc,MAAJ,CAAWlB,IAAX,EAAiBM,IAAjB;AACAhJ,QAAQC,GAAR,CAAY,yBAAyB+I,IAAzB,GAAgC,GAAhC,GAAsCN,IAAlD,E,CAAwD,iC;;;;;;AChCxD,iC;;;;;;;;;;;ACAA;;AAEA;AACA;;AAEA,IAAMmB,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOR,GAAP,CAAW,uDAAX;AACAQ,OAAOR,GAAP,CAAW,0DAAX;;AAEA,yDAAeQ,MAAf,E;;;;;;;;;ACXA;;AAEA,IAAMA,SAAS,uDAAAC,EAAf;;AAEA;AACA,IAAMC,QAAQ,CACZ,EAAElG,MAAM,WAAR,EAAqBmG,OAAO,cAA5B,EADY,EAEZ,EAAEnG,MAAM,OAAR,EAAiBmG,OAAO,eAAxB,EAFY,EAGZ,EAAEnG,MAAM,WAAR,EAAqBmG,OAAO,cAA5B,EAHY,EAIZ,EAAEnG,MAAM,MAAR,EAAgBmG,OAAO,aAAvB,EAJY,CAAd;;AAOA;AACAH,OAAOjG,GAAP,CAAW,QAAX,EAAqB,UAAUqG,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7CnK,UAAQC,GAAR,CAAY,YAAZ;AACAiK,MAAIE,IAAJ,CAASL,KAAT;AACD,CAHD;;AAKA;AACAF,OAAOjG,GAAP,CAAW,YAAX,EAAyB,UAAUqG,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACjD,MAAMpM,KAAKsM,SAASJ,IAAIK,MAAJ,CAAWvM,EAApB,CAAX;AACA,MAAIA,MAAM,CAAN,IAAWA,KAAKgM,MAAMnL,MAA1B,EAAkC;AAChCsL,QAAIE,IAAJ,CAASL,MAAMhM,EAAN,CAAT;AACD,GAFD,MAEO;AACLmM,QAAIK,UAAJ,CAAe,GAAf;AACD;AACF,CAPD;;AASA,yDAAeV,MAAf,E;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAIW,QAAQ,iDAAAC,CAAI,EAAJ,CAAZ,C,CAAoB;;AAEpB,IAAMZ,SAAS,uDAAAC,EAAf;;AAEA;AACAD,OAAOjG,GAAP,CAAW,gBAAX,EAA6B,UAAUqG,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrDnK,UAAQC,GAAR,CAAY,oBAAZ,EAAkCgK,IAAIK,MAAtC;AACA,MAAIrL,SAASgL,IAAIK,MAAJ,CAAWrL,MAAxB;AACAe,UAAQC,GAAR,qBAA8BhB,MAA9B;;AAEA;AACA,MAAIyL,WAAWzL,MAAf;AACA,MAAI0L,QAAQH,MAAM5G,GAAN,CAAU8G,QAAV,CAAZ,CAPqD,CAOrB;AAChC,MAAIT,IAAIW,KAAJ,CAAUC,MAAd,EAAsB;AACpB7K,YAAQC,GAAR,CAAY,iBAAZ;AACA0K,YAAQ,IAAR;AACD;AACD,MAAIA,KAAJ,EAAW;AACTT,QAAIE,IAAJ,CAASO,KAAT;AACA;AACD;;AAED;AACAG,EAAA,sDAAAA,CAASC,kBAAT,CAA4B9L,MAA5B,EAAoC,KAApC,EAA2C,eAAO;AAChD,QAAIoE,GAAJ,EAAS;AACPrD,cAAQC,GAAR,+BAAwChB,MAAxC,EAAkDoE,GAAlD,EAAuDA,IAAI2H,KAA3D;AACAd,UAAIK,UAAJ,CAAe,GAAf;AACA;AACD;AACD,QAAInI,QAAQ,mDAAA6I,CAAM7I,KAAN,EAAZ;AACA;AACA,QAAI8I,MAAM,EAAV;AACA,SAAK,IAAIlN,GAAT,IAAgBoE,KAAhB,EAAuB;AACrB8I,UAAIlN,GAAJ,IAAWoE,MAAMpE,GAAN,CAAX;AACD;;AAEDgC,YAAQC,GAAR,CAAY,4BAAZ;AACAuK,UAAMpB,GAAN,CAAUsB,QAAV,EAAoBQ,GAApB;;AAEAhB,QAAIE,IAAJ,CAASc,GAAT;AACD,GAjBD;AAkBD,CApCD;;AAsCA,yDAAerB,MAAf,E;;;;;;ACvDA,oC;;;;;;ACAA,wC;;;;;;;ACCA,SAAStH,GAAT,CAAc4I,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,MAAID,OAAO,IAAX,EAAiB;AACfA,UAAM,EAAN;AACD;AACD,SAAOA,IAAIvM,MAAJ,GAAawM,GAApB,EAAyB;AACvBD,UAAMA,MAAM,GAAZ;AACD;AACD,SAAOA,IAAI9G,SAAJ,CAAc,CAAd,EAAiB+G,GAAjB,CAAP;AACD;;AAED,SAASC,UAAT,CAAqBF,GAArB,EAA0B;AACxB,SAAOA,IAAI9G,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBiH,WAApB,KAAoCH,IAAI9G,SAAJ,CAAc,CAAd,CAA3C;AACD;;AAEDnC,OAAOC,OAAP,CAAeI,GAAf,GAAqBA,GAArB;AACAL,OAAOC,OAAP,CAAekJ,UAAf,GAA4BA,UAA5B,C;;;;;;AChBA,sC;;;;;;ACAA,IAAI5N,QAAQ,mBAAAC,CAAQ,CAAR,CAAZ;AACA,IAAMuN,QAAQ,mBAAAvN,CAAQ,CAAR,CAAd;AACA,IAAMC,QAAQ,mBAAAD,CAAQ,CAAR,CAAd;;AAEA,IAAI6N,yBAAyB,KAA7B;AACA,IAAIC,wBAAwB,KAA5B;AACA,IAAIC,qBAAqB,KAAzB;;AAEA,IAAMC,QAAQ,IAAd;;AAEA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC;AACA,MAAIC,MAAMZ,MAAM9J,KAAN,EAAV;AACA,OAAK,IAAIxC,IAAI,CAAb,EAAgBA,IAAIkN,IAAIjN,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC,QAAI8B,OAAOoL,IAAIlN,CAAJ,CAAX;AACA;AACA;AACA;AACA,QAAI8B,KAAK3C,IAAL,KAAcH,MAAMmC,SAApB,IAAiCW,KAAKvC,IAAL,CAAU4N,cAAV,KAA6BF,GAAlE,EAAuE;AACrE;AACA,aAAOnL,IAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED,SAASsL,gBAAT,CAA0BhO,EAA1B,EAA8B;AAC5B;AACA,MAAI8N,MAAMZ,MAAM9J,KAAN,EAAV;AACA,OAAK,IAAIxC,IAAI,CAAb,EAAgBA,IAAIkN,IAAIjN,MAAxB,EAAgCD,GAAhC,EAAqC;AACnC,QAAI8B,OAAOoL,IAAIlN,CAAJ,CAAX;AACA;AACA;AACA;AACA,QAAI,CAAC8B,KAAK3C,IAAL,KAAcH,MAAM6B,QAApB,IAAgCiB,KAAK3C,IAAL,KAAcH,MAAMqO,OAArD,KAAiEvL,KAAKvC,IAAL,CAAU4H,UAAV,KAAyB/H,EAA9F,EAAkG;AAChG;AACA,aAAO0C,IAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED,SAASwL,YAAT,CAAsB9I,QAAtB,EAAgC;AAC9B,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,kBAAZ;AACXxC,QAAMoF,GAAN,GAAYqJ,YAAZ,CAAyB,EAAzB,EAA6B,UAAC7I,GAAD,EAAMnF,IAAN,EAAe;AAC1C,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKiO,IAAL,CAAUjM,OAAV,CAAkB,eAAO;AACvB;AACA+K,YAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0B+M,IAAIzG,KAA9B,EAAqCyG,GAArC;AACD,KAHD;AAIA,WAAOjJ,SAAS,IAAT,CAAP;AACD,GATD;AAUD;;AAED,SAASkJ,iBAAT,CAA2BlJ,QAA3B,EAAqC;AACnC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,uBAAZ;;AAEXxC,QAAMoF,GAAN,GAAYyJ,iBAAZ,CAA8B,EAA9B,EAAkC,UAACjJ,GAAD,EAAMnF,IAAN,EAAe;AAC/C,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKqO,YAAL,CAAkBrM,OAAlB,CAA0B,eAAO;AAC/BgK,UAAIsC,SAAJ,CAActM,OAAd,CAAsB,oBAAY;;AAEhC;AACA;AACAuM,iBAAS/N,IAAT,CAAcwB,OAAd,CAAsB,eAAO;AAC3B,cAAIrB,IAAIC,GAAJ,KAAY,MAAZ,IAAsBD,IAAIE,KAAJ,CAAU2N,OAAV,CAAkB,WAAlB,KAAkC,CAA5D,EAA+D;AAC7DD,qBAASE,UAAT,GAAsB,IAAtB;AACD;AACF,SAJD;;AAMA;AACA,YAAIhO,IAAIsM,MAAMvK,QAAN,CAAe/C,MAAM6B,QAArB,EAA+BiN,SAAS3G,UAAxC,EAAoD2G,QAApD,CAAR;;AAEA;AACA,YAAIG,MAAM3B,MAAMvK,QAAN,CAAe/C,MAAMkH,KAArB,EAA4B4H,SAASI,OAArC,EAA8C,IAA9C,CAAV;AACAlO,UAAEmO,QAAF,CAAWF,GAAX;;AAEA;AACA,YAAIH,SAASM,SAAT,IAAsBN,SAASM,SAAT,CAAmBC,gBAA7C,EAA+D;AAC7D,cAAIC,KAAKhC,MAAMvK,QAAN,CAAe/C,MAAMmH,EAArB,EAAyB2H,SAASM,SAAT,CAAmBC,gBAA5C,EAA8D,IAA9D,EAAoE,gBAAQ;AACnF;AACA,gBAAIjN,OAAO,wBAAwBU,KAAK1C,EAA7B,GAAkC,KAA7C;AACA,mBAAOgC,IAAP;AACD,WAJQ,CAAT;AAKAkN,aAAGH,QAAH,CAAYnO,CAAZ;AACD;;AAED;AACA,YAAI8N,SAASvE,eAAb,EAA8B;AAC5B,cAAIgF,KAAKjC,MAAMvK,QAAN,CAAe/C,MAAMsH,QAArB,EAA+BwH,SAASvE,eAAxC,CAAT;AACAgF,aAAGJ,QAAH,CAAYnO,CAAZ;AACD;;AAED;AACA;AACA,YAAIwO,KAAKlC,MAAMvK,QAAN,CAAe/C,MAAMwB,MAArB,EAA6BsN,SAAShH,QAAtC,CAAT;AACA0H,WAAGL,QAAH,CAAYnO,CAAZ;;AAEA;AACA,YAAIyO,MAAMnC,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0BoN,SAAS9G,KAAnC,CAAV;AACAyH,YAAIN,QAAJ,CAAanO,CAAb;;AAEA;AACA8N,iBAASY,cAAT,CAAwBnN,OAAxB,CAAgC,cAAM;AACpC,cAAIoN,IAAIrC,MAAMvK,QAAN,CAAe/C,MAAMyB,MAArB,EAA6BmO,GAAG7H,OAAhC,CAAR;AACA4H,YAAER,QAAF,CAAWnO,CAAX;AACAA,YAAEmO,QAAF,CAAWQ,CAAX;AACD,SAJD;AAKD,OAhDD;AAiDD,KAlDD;AAmDA7B,yBAAqB,IAArB;AACA,WAAOtI,SAAS,IAAT,CAAP;AACD,GAzDD;AA0DD;;AAED,SAASqK,eAAT,CAAyBrK,QAAzB,EAAmC;AACjC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,qBAAZ;;AAEX;;AAEAxC,QAAMoF,GAAN,GAAY4K,eAAZ,CAA4B,EAA5B,EAAgC,UAACpK,GAAD,EAAMnF,IAAN,EAAe;AAC7C,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKwP,OAAL,CAAaxN,OAAb,CAAqB,eAAO;AAC1B,UAAIiN,KAAKlC,MAAMvK,QAAN,CAAe/C,MAAMwB,MAArB,EAA6BiN,IAAI3G,QAAjC,EAA2C2G,GAA3C,CAAT;;AAEA;AACA,UAAIuB,IAAI1C,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0B+M,IAAIzG,KAA9B,EAAqC,IAArC,CAAR;AACAgI,QAAEb,QAAF,CAAWK,EAAX;;AAEA;AACA,UAAIF,KAAKhC,MAAMvK,QAAN,CAAe/C,MAAMmH,EAArB,EAAyBsH,IAAIY,gBAA7B,EAA+C,IAA/C,CAAT;AACAC,SAAGH,QAAH,CAAYK,EAAZ;AACD,KAVD;AAWA,WAAOhK,SAAS,IAAT,CAAP;AACD,GAhBD;AAiBD;;AAED,SAASyK,sBAAT,CAAgCzK,QAAhC,EAA0C;AACxC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,4BAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACAA,YAAQ,aAAaU,KAAKvC,IAAL,CAAUmI,SAAvB,GAAmC,IAA3C;AACAtG,YAAQ,oBAAoBU,KAAKvC,IAAL,CAAU0I,WAA9B,GAA4C,IAApD;AACA,WAAO7G,IAAP;AACD,GALD;;AAOAtC,QAAMoF,GAAN,GAAYgL,sBAAZ,CAAmC,EAAnC,EAAuC,UAACxK,GAAD,EAAMnF,IAAN,EAAe;AACpD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTnF,SAAKmP,cAAL,CAAoBnN,OAApB,CAA4B,eAAO;AACjC;AACA,UAAIoN,IAAIrC,MAAMvK,QAAN,CAAe/C,MAAMyB,MAArB,EAA6B0O,IAAIpI,OAAjC,EAA0CoI,GAA1C,EAA+CxG,QAA/C,CAAR;;AAEA;AACA,UAAIqG,IAAI1C,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0ByO,IAAInI,KAA9B,EAAqC,IAArC,CAAR;AACAgI,QAAEb,QAAF,CAAWQ,CAAX;AACD,KAPD;AAQA,WAAOnK,SAAS,IAAT,CAAP;AACD,GAXD;AAYD;;AAED,SAAS4K,mBAAT,CAA6B5K,QAA7B,EAAuC;AACrC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,yBAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACAA,YAAQ,cAAcU,KAAKvC,IAAL,CAAU2I,KAAxB,GAAgC,IAAxC;AACA,WAAO9G,IAAP;AACD,GAJD;;AAMAtC,QAAMoF,GAAN,GAAYmL,mBAAZ,CAAgC,EAAhC,EAAoC,UAAC3K,GAAD,EAAMnF,IAAN,EAAe;AACjD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAK+P,WAAL,CAAiB/N,OAAjB,CAAyB,eAAO;AAC9BF,cAAQC,GAAR,CAAY,YAAY6N,IAAIlI,YAA5B;AACA,UAAI0H,IAAIrC,MAAMvK,QAAN,CAAe/C,MAAM2B,GAArB,EAA0BwO,IAAIlI,YAA9B,EAA4CkI,GAA5C,EAAiDxG,QAAjD,CAAR;;AAEA,UAAIwG,IAAIjH,KAAJ,KAAc,SAAlB,EAA6B;AAC3B;AACA,YAAIsG,KAAKlC,MAAMvK,QAAN,CAAe/C,MAAMwB,MAArB,EAA6B2O,IAAIrI,QAAjC,EAA2C,IAA3C,CAAT;AACA0H,WAAGL,QAAH,CAAYQ,CAAZ;;AAEA;AACA,YAAIK,IAAI1C,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0ByO,IAAInI,KAA9B,EAAqC,IAArC,CAAR;AACAgI,UAAEb,QAAF,CAAWQ,CAAX;;AAEA;AACAQ,YAAIhH,mBAAJ,CAAwB5G,OAAxB,CAAgC,gBAAQ;AACtC,cAAIgO,KAAKC,kBAAT,EAA6B;AAC3B,gBAAIC,QAAQnD,MAAMvK,QAAN,CAAe/C,MAAMgC,QAArB,EAA+BuO,KAAKC,kBAApC,EAAwD,IAAxD,CAAZ;AACAb,cAAER,QAAF,CAAWsB,KAAX;AACD;AACD,cAAIF,KAAK5H,QAAT,EAAmB;AACjB,gBAAI4G,KAAKjC,MAAMvK,QAAN,CAAe/C,MAAMsH,QAArB,EAA+BiJ,KAAK5H,QAApC,EAA8C,IAA9C,CAAT;AACAgH,cAAER,QAAF,CAAWI,EAAX;AACD;AACF,SATD;AAUD;AACF,KAzBD;AA0BA,WAAO/J,SAAS,IAAT,CAAP;AACD,GA/BD;AAgCD;;AAED,SAASkL,wBAAT,CAAkClL,QAAlC,EAA4C;AAC1C,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,8BAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACA,QAAI8D,OAAOpD,KAAK2F,OAAL,CAAa,MAAb,CAAX;AACA,QAAIvC,IAAJ,EAAU;AACR9D,cAAQ,aAAa8D,IAAb,GAAoB,IAA5B;AACD;AACD,WAAO9D,IAAP;AACD,GAPD;;AASA;AACA;AACA;AACAtC,QAAMoF,GAAN,GAAYyL,wBAAZ,CAAqC,EAArC,EAAyC,UAACjL,GAAD,EAAMnF,IAAN,EAAe;AACtD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAETnF,SAAKqQ,gBAAL,CAAsBrO,OAAtB,CAA8B,eAAO;AACnC;AACA,UAAIsO,MAAMvD,MAAMvK,QAAN,CAAe/C,MAAM4B,GAArB,EAA0B6M,IAAIvG,iBAA9B,EAAiDuG,GAAjD,EAAsD9E,QAAtD,CAAV;;AAEA;AACA8E,UAAIqC,WAAJ,CAAgBvO,OAAhB,CAAwB,sBAAc;AACpC,YAAIwO,WAAW/I,KAAf,EAAsB;AACpB,cAAIyH,MAAMnC,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0BqP,WAAW/I,KAArC,CAAV;AACAyH,cAAIN,QAAJ,CAAa0B,GAAb;AACD;AACF,OALD;AAMD,KAXD;AAYA,WAAOrL,SAAS,IAAT,CAAP;AACD,GAhBD;AAiBD;;AAED;AACA,SAASwL,iBAAT,CAA2BxL,QAA3B,EAAqC;AACnC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,uBAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB;AACA,QAAIvH,OAAO,EAAX;AACAA,YAAQ,mBAAmBU,KAAKvC,IAAL,CAAUoI,QAA7B,GAAwC,IAAhD;AACA,WAAOvG,IAAP;AACD,GALD;;AAOAtC,QAAMoF,GAAN,GAAY+L,iBAAZ,CAA8B,EAA9B,EAAkC,UAACvL,GAAD,EAAMnF,IAAN,EAAe;AAC/C,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAK2Q,SAAL,CAAe3O,OAAf,CAAuB,eAAO;AAC5B,UAAIgO,OAAOjD,MAAMvK,QAAN,CAAe/C,MAAM8B,IAArB,EAA2B2M,IAAIrG,YAA/B,EAA6CqG,GAA7C,EAAkD9E,QAAlD,CAAX;;AAEA;AACA,UAAI8E,IAAI9F,QAAR,EAAkB;AAChB,YAAI4G,KAAKjC,MAAMvK,QAAN,CAAe/C,MAAMsH,QAArB,EAA+BmH,IAAI9F,QAAnC,CAAT;AACA4G,WAAGJ,QAAH,CAAYoB,IAAZ;AACD;AACF,KARD;AASA,WAAO/K,SAAS,IAAT,CAAP;AACD,GAdD;AAeD;;AAED,SAAS2L,yBAAT,CAAmC3L,QAAnC,EAA6C;AAC3C,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,+BAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACA;AACA,WAAOA,IAAP;AACD,GAJD;;AAMAtC,QAAMoF,GAAN,GAAYkM,yBAAZ,CAAsC,EAAtC,EAA0C,UAAC1L,GAAD,EAAMnF,IAAN,EAAe;AACvD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAK8Q,iBAAL,CAAuB9O,OAAvB,CAA+B,eAAO;AACpC,UAAIoN,IAAIrC,MAAMvK,QAAN,CAAe/C,MAAMmH,EAArB,EAAyBsH,IAAI6C,QAA7B,EAAuC7C,GAAvC,EAA4C9E,QAA5C,CAAR;AACD,KAFD;AAGA,WAAOnE,SAAS,IAAT,CAAP;AACD,GARD;AASD;;AAED,SAAS+L,gBAAT,CAA0B/L,QAA1B,EAAoC;AAClC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,sBAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACA,WAAOA,IAAP;AACD,GAHD;;AAKAtC,QAAMoF,GAAN,GAAYsM,gBAAZ,CAA6B,EAA7B,EAAiC,UAAC9L,GAAD,EAAMnF,IAAN,EAAe;AAC9C,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKkR,QAAL,CAAclP,OAAd,CAAsB,eAAO;AAC3B;AACA+K,YAAMvK,QAAN,CAAe/C,MAAM+B,OAArB,EAA8B0M,IAAIpE,OAAlC,EAA2CoE,GAA3C,EAAgD9E,QAAhD;AACD,KAHD;AAIA,WAAOnE,SAAS,IAAT,CAAP;AACD,GATD;AAUD;;AAED;AACA,SAASkM,yBAAT,CAAmClM,QAAnC,EAA6C;AAC3C,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,+BAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACAA,YAAQU,KAAKvC,IAAL,CAAU0I,WAAlB;AACA,WAAO7G,IAAP;AACD,GAJD;;AAMAtC,QAAMoF,GAAN,GAAYyM,yBAAZ,CAAsC,EAAtC,EAA0C,UAACjM,GAAD,EAAMnF,IAAN,EAAe;AACvD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKqR,iBAAL,CAAuBrP,OAAvB,CAA+B,eAAO;AACpC;AACA,UAAIsP,KAAKvE,MAAMvK,QAAN,CAAe/C,MAAMgC,QAArB,EAA+ByM,IAAI+B,kBAAnC,EAAuD/B,GAAvD,EAA4D9E,QAA5D,CAAT;;AAEA;AACA,UAAI8E,IAAIqD,WAAJ,IAAmBrD,IAAIqD,WAAJ,CAAgBnJ,QAAvC,EAAiD;AAC/C,YAAI4G,KAAKjC,MAAMvK,QAAN,CAAe/C,MAAMsH,QAArB,EAA+BmH,IAAIqD,WAAJ,CAAgBnJ,QAA/C,CAAT;AACA4G,WAAGJ,QAAH,CAAY0C,EAAZ;AACD;;AAED;AACA,UAAIpD,IAAIsD,UAAR,EAAoB;AAClB,YAAItD,IAAIsD,UAAJ,CAAe5J,UAAnB,EAA+B;AAC7B,cAAI2G,WAAWxB,MAAMvK,QAAN,CAAe/C,MAAM6B,QAArB,EAA+B4M,IAAIsD,UAAJ,CAAe5J,UAA9C,CAAf;AACA0J,aAAG1C,QAAH,CAAYL,QAAZ;AACD;AACF;;AAED;AACA,UAAIQ,KAAKhC,MAAMvK,QAAN,CAAe/C,MAAMmH,EAArB,EAAyBsH,IAAIY,gBAA7B,CAAT;AACAC,SAAGH,QAAH,CAAY0C,EAAZ;;AAEA;AACA,UAAIG,SAAS1E,MAAMvK,QAAN,CAAe/C,MAAMwB,MAArB,EAA6BiN,IAAI3G,QAAjC,CAAb;AACAkK,aAAO7C,QAAP,CAAgB0C,EAAhB;;AAEA;AACA,UAAIpC,MAAMnC,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0B+M,IAAIzG,KAA9B,CAAV;AACAyH,UAAIN,QAAJ,CAAa0C,EAAb;AACD,KA7BD;AA8BA,WAAOrM,SAAS,IAAT,CAAP;AACD,GAnCD;AAoCD;;AAED,SAASyM,mBAAT,CAA6BzM,QAA7B,EAAuC;AACrC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,yBAAZ;AACX,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB;AACA,QAAIvH,OAAO,EAAX;AACA,QAAIU,KAAKuF,eAAT,EAA0B;AACxBjG,cAAQ,yBAAR;AACD;AACD,QAAI8D,OAAOpD,KAAK2F,OAAL,CAAa,MAAb,CAAX;AACA,QAAIvC,IAAJ,EAAU;AACR9D,cAAQ,OAAO8D,IAAf;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAIgM,WAAW,EAAf;AACA9P,YAAQ,gCAAR;AACAU,SAAKvC,IAAL,CAAU4R,MAAV,CAAiB5P,OAAjB,CAAyB,iBAAS;AAChC,UAAI6P,MAAMC,SAAN,KAAoB,OAAxB,EAAiC;AAC/BjQ,gBAAQ,aAAagQ,MAAME,oBAAnB,GAA0C,mDAAlD;AACD,OAFD,MAEO;AACL,YAAIjS,MAAMiN,MAAMhN,UAAN,CAAiBN,MAAM2B,GAAvB,EAA4ByQ,MAAMC,SAAlC,CAAV;AACAjQ,gBAAQ,aAAagQ,MAAME,oBAAnB,GAA0C,iDAA1C,GAA8FjS,GAA9F,GAAoG,IAApG,GAA2G+R,MAAMC,SAAjH,GAA6H,kBAArI;AACD;AACF,KAPD;AAQAjQ,YAAQ,UAAR;AACA,WAAOA,IAAP;AACD,GA9BD;;AAgCAtC,QAAMoF,GAAN,GAAYqN,mBAAZ,CAAgC,EAAhC,EAAoC,UAAC7M,GAAD,EAAMnF,IAAN,EAAe;AACjD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKiS,WAAL,CAAiBjQ,OAAjB,CAAyB,eAAO;AAC9B;AACA,UAAIkQ,KAAKnF,MAAMvK,QAAN,CAAe/C,MAAMiC,UAArB,EAAiCwM,IAAIiE,YAArC,EAAmDjE,GAAnD,EAAwD9E,QAAxD,CAAT;;AAEA;AACA,UAAIuI,WAAW,EAAf,CAL8B,CAKZ;AAClBzD,UAAI0D,MAAJ,CAAW5P,OAAX,CAAmB,iBAAS;AAC1B,YAAI6P,MAAMC,SAAN,KAAoB,OAAxB,EAAiC;AAC/B;AACD,SAFD,MAEO,IAAID,MAAMnK,YAAV,EAAwB;AAC7B;AACA,cAAI7H,KAAKgS,MAAMnK,YAAf;AACA,cAAI,CAACiK,SAAS9R,EAAT,CAAL,EAAmB;AACjB,gBAAIuS,MAAMrF,MAAMvK,QAAN,CAAe/C,MAAM2B,GAArB,EAA0BvB,EAA1B,CAAV;AACAqS,eAAGtD,QAAH,CAAYwD,GAAZ;AACA;AACAF,eAAGpK,eAAH,GAAqB,IAArB;AACA6J,qBAAS9R,EAAT,IAAe,IAAf;AACD;AACF,SAVM,MAUA,IAAIgS,MAAMC,SAAV,EAAqB;AAC1B;AACA,cAAIjS,MAAKgS,MAAMC,SAAf;AACA,cAAI,CAACH,SAAS9R,GAAT,CAAL,EAAmB;AACjB,gBAAIyQ,MAAMvD,MAAMvK,QAAN,CAAe/C,MAAM4B,GAArB,EAA0BxB,GAA1B,CAAV;AACAqS,eAAGtD,QAAH,CAAY0B,GAAZ;AACA;AACA;AACAqB,qBAAS9R,GAAT,IAAe,IAAf;AACD;AACF;AACF,OAxBD;;AA0BA;AACAqO,UAAImE,YAAJ,CAAiBrQ,OAAjB,CAAyB,iBAAS;AAChC,YAAIsQ,MAAM/K,QAAV,EAAoB;AAClB,cAAI0H,KAAKlC,MAAMvK,QAAN,CAAe/C,MAAMwB,MAArB,EAA6BqR,MAAM/K,QAAnC,CAAT;AACA2K,aAAGtD,QAAH,CAAYK,EAAZ;AACD;AACF,OALD;;AAOA;AACA,UAAIC,MAAMnC,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0B+M,IAAIzG,KAA9B,CAAV;AACAyH,UAAIN,QAAJ,CAAasD,EAAb;AACD,KA3CD;AA4CA,WAAOjN,SAAS,IAAT,CAAP;AACD,GAjDD;AAkDD;;AAED,SAASsN,eAAT,CAAyBC,WAAzB,EAAsCC,gBAAtC,EAAwD;AACtD,MAAI5Q,OAAO,EAAX;AACA,MAAI4Q,gBAAJ,EAAsB;AACpB,QAAID,YAAYE,OAAZ,IAAuBF,YAAYE,OAAZ,CAAoBhS,MAApB,GAA6B,CAAxD,EAA2D;AACzD8R,kBAAYE,OAAZ,CAAoB1Q,OAApB,CAA4B,kBAAU;AACpC;AACA,YAAIlC,MAAMiN,MAAMhN,UAAN,CAAiBN,MAAM6B,QAAvB,EAAiCqR,OAAOC,MAAP,CAAcC,EAA/C,CAAV;AACAhR,gBAAQ,oBAAR;AACAA,gBAAQ,oBAAoB/B,GAApB,GAA0B,IAA1B,GAAiC6S,OAAOC,MAAP,CAAcC,EAA/C,GAAoD,MAA5D;AACAhR,gBAAQ,YAAY8Q,OAAOC,MAAP,CAAcE,IAA1B,GAAiC,MAAjC,GAA0CH,OAAOI,YAAP,CAAoBpK,KAA9D,GAAsE,KAA9E;AACD,OAND;AAOD,KARD,MAQO;AACL9G,cAAQ,kBAAR;AACD;AACF,GAZD,MAYO;AACLA,YAAQ,gDAAR;AACD;AACD,SAAOA,IAAP;AACD;;AAED,SAASmR,qBAAT,CAA+BP,gBAA/B,EAAiDxN,QAAjD,EAA2D;AACzD,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,2BAAZ;;AAEX,MAAI,CAACuL,qBAAL,EAA4B;AAC1BxL,YAAQC,GAAR,CAAY,qEAAZ;AACAD,YAAQC,GAAR,CAAY,iEAAZ;AACD;;AAGD,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACAA,YAAQ,aAAaU,KAAKvC,IAAL,CAAU2I,KAAV,CAAgBsK,IAA7B,GAAoC,IAA5C;AACA,QAAIC,MAAM3Q,KAAKvC,IAAL,CAAU6I,OAApB;AACA,QAAIqK,GAAJ,EAAS;AACPrR,cAAQ,0BAA0BqR,GAA1B,GAAgC,oBAAhC,GAAuDA,GAAvD,GAA6D,QAArE;AACD;AACD,QAAI3Q,KAAK4Q,UAAT,EAAqB;AACnB5Q,WAAK4Q,UAAL,CAAgBnR,OAAhB,CAAwB,oBAAY;AAClC,YAAIwQ,cAAcY,SAASC,gBAA3B;AACA,YAAI,CAACb,WAAL,EAAkB;;AAEhB;AACA,cAAIc,OAAOF,SAASG,QAAT,CAAkBpR,WAAlB,KAAkC,KAAlC,GAA0C+Q,GAA1C,GAAgD,GAAhD,GAAsDE,SAASN,IAA1E;AACAjR,kBAAQ,cAAcyR,IAAd,GAAqB,2BAArB,GAAmDF,SAASG,QAAT,CAAkBpR,WAAlB,EAAnD,GAAqF,KAArF,GAA6FiR,SAASN,IAAtG,GAA6G,4BAArH;AACD,SALD,MAKO;;AAEL;AACA;AACA,cAAIQ,QAAOF,SAASG,QAAT,CAAkBpR,WAAlB,KAAkC,KAAlC,GAA0C+Q,GAA1C,GAAgD,GAAhD,GAAsDE,SAASN,IAA/D,GAAsEN,YAAYxS,IAAZ,CAAiByJ,eAAlG;AACA5H,kBAAQ,cAAcyR,KAAd,GAAqB,2BAArB,GAAmDF,SAASG,QAAT,CAAkBpR,WAAlB,EAAnD,GAAqF,KAArF,GAA6FiR,SAASN,IAAtG,GAA6G,uCAA7G,GAAuJN,YAAY1S,GAAnK,GAAyK,IAAzK,GAAgL0S,YAAY3S,EAA5L,GAAiM,SAAzM;;AAEA;AACAgC,kBAAQ0Q,gBAAgBC,WAAhB,EAA6BC,gBAA7B,CAAR;AACD;AACF,OAjBD;AAkBD,KAnBD,MAmBO;AACL5Q,cAAQ,sCAAR;AACD;AACD,WAAOA,IAAP;AACD,GA9BD;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtC,QAAMqF,KAAN,GAAc4O,qBAAd,CAAoC,EAApC,EAAwC,UAACrO,GAAD,EAAMnF,IAAN,EAAe;AACrD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT;;AAEA,KAAC,SAASsO,OAAT,CAAiBvP,KAAjB,EAAwB;AACvB,UAAIA,SAASlE,KAAK0T,aAAL,CAAmBhT,MAAhC,EAAwC;AACtC2M,iCAAyB,IAAzB;AACA,eAAOpI,SAAS,IAAT,CAAP;AACD;AACD,UAAIiJ,MAAMlO,KAAK0T,aAAL,CAAmBxP,KAAnB,CAAV;AACA,UAAIyP,MAAM5G,MAAMvK,QAAN,CAAe/C,MAAMkC,GAArB,EAA0BuM,IAAI5F,gBAA9B,EAAgD4F,GAAhD,EAAqD9E,QAArD,CAAV;;AAEA;AACA8E,UAAI4C,iBAAJ,CAAsB9O,OAAtB,CAA8B,cAAM;AAClC,YAAI4R,MAAM7G,MAAMvK,QAAN,CAAe/C,MAAMmH,EAArB,EAAyBmI,GAAGgC,QAA5B,CAAV;AACA6C,YAAIhF,QAAJ,CAAa+E,GAAb;;AAEA,YAAIlC,SAAS1E,MAAMvK,QAAN,CAAe/C,MAAMwB,MAArB,EAA6B8N,GAAGxH,QAAhC,CAAb;AACAkK,eAAO7C,QAAP,CAAgB+E,GAAhB;AACD,OAND;;AAQA;AACAzF,UAAIiB,cAAJ,CAAmBnN,OAAnB,CAA2B,gBAAQ;AACjC,YAAIqN,KAAKtC,MAAMvK,QAAN,CAAe/C,MAAMyB,MAArB,EAA6B2S,IAA7B,CAAT;AACAxE,WAAGT,QAAH,CAAY+E,GAAZ;AACD,OAHD;;AAKA;AACA,UAAIzE,MAAMnC,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0B+M,IAAIzG,KAA9B,CAAV;AACAyH,UAAIN,QAAJ,CAAa+E,GAAb;;AAEA;AACA;AACApU,YAAMqF,KAAN,GAAckP,iBAAd,CAAgC;AAC9BC,yBAAiB7F,IAAI6F;AADS,OAAhC,EAEG,UAAC5O,GAAD,EAAMnF,IAAN,EAAe;AAChB,YAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAwO,YAAIR,UAAJ,GAAiBnT,KAAKgU,SAAtB;AACA;;AAEA;AACA,SAAC,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AACpC,cAAIA,iBAAiBlU,KAAKgU,SAAL,CAAetT,MAApC,EAA4C;AAC1C,mBAAO+S,QAAQvP,QAAQ,CAAhB,CAAP;AACD;AACD,cAAIkP,WAAWpT,KAAKgU,SAAL,CAAeE,aAAf,CAAf;AACA;;AAEA;AACA;AACAd,mBAASe,cAAT,CAAwBnS,OAAxB,CAAgC,kBAAU;;AAExC;AACA,gBAAIwQ,cAAc/E,qBAAqB2G,OAAOxG,cAA5B,CAAlB;AACA,gBAAI,CAAC4E,WAAL,EAAkB;AAChB;AACA;AACA,qBAAOyB,aAAaC,gBAAgB,CAA7B,CAAP;AACD;AACDd,qBAASC,gBAAT,GAA4Bb,WAA5B;AACAmB,gBAAI/E,QAAJ,CAAa4D,WAAb;;AAEA;AACA;AACA,gBAAI,CAACC,gBAAL,EAAuB;AACrB;AACA,qBAAOwB,aAAaC,gBAAgB,CAA7B,CAAP;AACD;AACD;AACA,gBAAId,SAASC,gBAAT,CAA0BX,OAA9B,EAAuC;AACrC,qBAAOuB,aAAaC,gBAAgB,CAA7B,CAAP;AACD;;AAED;AACA;AACA;AACA3U,kBAAMqF,KAAN,GAAcyP,oBAAd,CAAmC;AACjCzG,8BAAgB4E,YAAYxS,IAAZ,CAAiB4N;AADA,aAAnC,EAEG,UAACzI,GAAD,EAAMmP,UAAN,EAAqB;AACtB,kBAAInP,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTiO,uBAASC,gBAAT,CAA0BX,OAA1B,GAAoC4B,WAAWC,wBAA/C;AACA;AACAD,yBAAWC,wBAAX,CAAoCvS,OAApC,CAA4C,kBAAU;AACpD;AACA;AACA,oBAAIuM,WAAWxB,MAAMvK,QAAN,CAAe/C,MAAM6B,QAArB,EAA+BqR,OAAOC,MAAP,CAAcC,EAA7C,CAAf;AACAc,oBAAI/E,QAAJ,CAAaL,QAAb;AACD,eALD,EAJsB,CASnB;AACH,qBAAO0F,aAAaC,gBAAgB,CAA7B,CAAP;AACD,aAbD,EA1BwC,CAuCrC;AACJ,WAxCD,EAToC,CAiDjC;AACJ,SAlDD,EAkDG,CAlDH,EARgB,CA0DV;AACP,OA7DD,EA7BuB,CA0FpB;AACJ,KA3FD,EA2FG,CA3FH,EAJqD,CA+F/C;AACP,GAhGD,EAjDyD,CAiJtD;AACJ;;AAED,SAASM,oBAAT,CAA8B/B,gBAA9B,EAAgDxN,QAAhD,EAA0D;AACxD,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,0BAAZ;;AAEX;AACA,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACAA,YAAQ,WAAWU,KAAKvC,IAAL,CAAUuT,QAAV,CAAmBpR,WAAnB,EAAX,GAA8C,KAA9C,GAAsDI,KAAKvC,IAAL,CAAU8S,IAAhE,GAAuE,IAA/E;AACAjR,YAAQ,kBAAkBU,KAAKvC,IAAL,CAAUyJ,eAA5B,GAA8C,IAAtD;;AAEA;AACA5H,YAAQ0Q,gBAAgBhQ,IAAhB,EAAsBkQ,gBAAtB,CAAR;AACA,WAAO5Q,IAAP;AACD,GARD;;AAUA;AACAtC,QAAMqF,KAAN,GAAc6P,oBAAd,CAAmC,EAAnC,EAAuC,UAACtP,GAAD,EAAMnF,IAAN,EAAe;AACpD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAK0U,YAAL,CAAkB1S,OAAlB,CAA0B,eAAO;AAC/B;AACA,UAAI2S,KAAK5H,MAAMvK,QAAN,CAAe/C,MAAMmC,SAArB,EAAgCsM,IAAInG,eAApC,EAAqDmG,GAArD,EAA0D9E,QAA1D,CAAT;;AAEA;AACA,UAAI8F,MAAMnC,MAAMvK,QAAN,CAAe/C,MAAM0B,GAArB,EAA0B+M,IAAIzG,KAA9B,CAAV;AACAyH,UAAIN,QAAJ,CAAa+F,EAAb;AACD,KAPD;AAQArH,4BAAwB,IAAxB;AACA,WAAOrI,SAAS,IAAT,CAAP;AACD,GAdD;AAeD;;AAED;;;AAGA,SAAS2P,gCAAT,CAA0CC,OAA1C,EAAmD5P,QAAnD,CAA2D,iCAA3D,EAA8F;AAC5F,MAAI+C,cAAc6M,QAAQ7U,IAAR,CAAagI,WAA/B;AACA,MAAIwF,KAAJ,EAAW1L,QAAQC,GAAR,uDAAgEiG,WAAhE;AACX,MAAI8M,uBAAuB,EAA3B,CAH4F,CAG5D;AAChCvV,QAAMuF,GAAN,GAAYiQ,sBAAZ,CAAmC;AACjCF,aAAS7M;AADwB,GAAnC,EAEG,UAAS7C,GAAT,EAAc6P,qBAAd,EAAqC;AACtC,QAAI7P,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,QAAI6P,sBAAsBC,qBAAtB,CAA4CvU,MAA5C,IAAsD,CAA1D,EAA6D;AAC3D,aAAOuE,SAAS,IAAT,EAAe6P,oBAAf,CAAP;AACD;AACD,QAAI1I,SAAS;AACXyI,eAAS7M,WADE;AAEXkN,0BAAoBF,sBAAsBC;AAF/B,KAAb;AAIA,QAAIzH,KAAJ,EAAW1L,QAAQC,GAAR,sDAA+DiG,WAA/D,UAA+EgN,sBAAsBC,qBAAtB,CAA4CvU,MAA3H;AACXnB,UAAMuF,GAAN,GAAYqQ,0BAAZ,CAAuC/I,MAAvC,EAA+C,UAASjH,GAAT,EAAciQ,oBAAd,EAAoC;AACjF,UAAIjQ,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACA;AACAiQ,2BAAqBF,kBAArB,CAAwClT,OAAxC,CAAgD,UAASqT,YAAT,EAAuB;AACrE,YAAI9G,WAAWV,iBAAiBwH,aAAaC,aAA9B,CAAf;AACAT,gBAAQjG,QAAR,CAAiBL,QAAjB;;AAEA;AACAuG,6BAAqBO,aAAaE,oBAAlC,IAA0DhH,QAA1D;AACD,OAND,EALiF,CAW7E;AACJ,aAAOtJ,SAAS,IAAT,EAAe6P,oBAAf,CAAP;AACD,KAbD,EAVsC,CAuBnC;AACJ,GA1BD,EAJ4F,CA8BzF;AACJ,E,CAAC;;AAEF;;;;;AAKA,SAASU,sBAAT,CAAgCX,OAAhC,EAAyC5P,QAAzC,CAAiD,WAAjD,EAA8D;AAC5D,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,+CAAwD8S,QAAQ7U,IAAR,CAAagI,WAArE;;AAEX,MAAIA,cAAc6M,QAAQ7U,IAAR,CAAagI,WAA/B;AACA,MAAIyN,aAAaZ,QAAQ7U,IAAR,CAAayV,UAA9B;AACAlW,QAAMuF,GAAN,GAAY4Q,YAAZ,CAAyB;AACvBb,aAAS7M;AADc,GAAzB,EAEG,UAAS7C,GAAT,EAAcwQ,eAAd,EAA+B;AAChC,QAAIxQ,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,QAAIwQ,gBAAgBC,WAAhB,CAA4BlV,MAA5B,KAAuC,CAA3C,EAA8C;AAC5C,aAAOuE,SAAS,IAAT,CAAP;AACD;AACD,QAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,6BAAZ;AACXxC,UAAMuF,GAAN,GAAY+Q,gBAAZ,CAA6B;AAC3BC,gBAAUH,gBAAgBC,WADC;AAE3Bf,eAASY;AAFkB,KAA7B,EAGG,UAAStQ,GAAT,EAAc4Q,kBAAd,EAAkC;AACnC,UAAI5Q,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACA;AACA4Q,yBAAmBD,QAAnB,CAA4B9T,OAA5B,CAAoC,sBAAc;;AAEhD;AACA;AACA,YAAIgU,UAAUjJ,MAAMvK,QAAN,CAAe/C,MAAM0H,OAArB,EAA8B8O,WAAWhO,WAAzC,EAAsDgO,UAAtD,CAAd;AACApB,gBAAQjG,QAAR,CAAiBoH,OAAjB;;AAEA;AACAC,mBAAWC,aAAX,CAAyBlU,OAAzB,CAAiC,cAAM;AACrC,cAAI2S,KAAKlH,qBAAqB0I,GAAGC,cAAxB,CAAT;AACA,cAAIzB,EAAJ,EAAQ;AACNA,eAAG/F,QAAH,CAAYoH,OAAZ;AACA;AACD,WAHD,MAGO;AACLlU,oBAAQC,GAAR,qBAA8BiU,QAAQlW,GAAtC,wCAA4EqW,GAAGC,cAA/E;AACD;AACF,SARD,EARgD,CAgB5C;AACL,OAjBD,EALmC,CAsB/B;AACJ,aAAOnR,SAAS,IAAT,CAAP;AACD,KA3BD,EANgC,CAiC5B;AACL,GApCD,EAL4D,CAyCxD;AACL,C,CAAA;;AAED;;;AAGA,SAASoR,mBAAT,CAA6BrO,WAA7B,EAA0C/C,QAA1C,CAAkD,2BAAlD,EAA+E;AAC7E,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,yCAAkDiG,WAAlD;AACXzI,QAAMuF,GAAN,GAAYwR,SAAZ,CAAsB;AACpBzB,aAAS7M;AADW,GAAtB,EAEG,UAAS7C,GAAT,EAAcoR,QAAd,EAAwB;AACzB,QAAIpR,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT;AACA,QAAIoR,SAASC,QAAT,CAAkB9V,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,aAAOuE,SAAS,IAAT,EAAe,EAAf,CAAP,CADkC,CACN;AAC7B;AACD,QAAImH,SAAS;AACXqK,aAAOF,SAASC,QADL;AAEX3B,eAAS7M;AAFE,KAAb;AAIA,QAAIwF,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,wBAAZ;AACXxC,UAAMuF,GAAN,GAAY4R,aAAZ,CAA0BtK,MAA1B,EAAkC,UAASjH,GAAT,EAAcwR,eAAd,EAA+B;AAC/D,UAAIxR,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACA,aAAOF,SAAS,IAAT,EAAe0R,gBAAgBF,KAA/B,CAAP;AACD,KALD,EAXyB,CAgBrB;AACL,GAnBD,EAF6E,CAqBzE;AACL;;AAED,SAASG,gBAAT,CAA0B3R,QAA1B,EAAoC;AAClC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,sBAAZ;;AAEX;AACA;AACA,MAAI,CAACsL,sBAAL,EAA6B;AAC3BvL,YAAQC,GAAR,CAAY,iEAAZ;AACAD,YAAQC,GAAR,CAAY,4DAAZ;AACD;AACD,MAAI,CAACuL,qBAAL,EAA4B;AAC1BxL,YAAQC,GAAR,CAAY,gEAAZ;AACAD,YAAQC,GAAR,CAAY,2DAAZ;AACD;AACD,MAAI,CAACwL,kBAAL,EAAyB;AACvBzL,YAAQC,GAAR,CAAY,6DAAZ;AACAD,YAAQC,GAAR,CAAY,uDAAZ;AACD;;AAED,MAAIqH,WAAW,SAAXA,QAAW,CAAC7G,IAAD,EAAU;AACvB,QAAIV,OAAO,EAAX;AACA,QAAI8D,OAAOpD,KAAK2F,OAAL,CAAa,MAAb,CAAX;AACA,QAAIvC,IAAJ,EAAU;AACR9D,cAAQ,aAAa8D,IAAb,GAAoB,IAA5B;AACD;AACD,WAAO9D,IAAP;AACD,GAPD;;AASA;;;;;AAKA,MAAI2L,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,8BAAZ;AACXxC,QAAMuF,GAAN,GAAY+R,YAAZ,CAAyB,EAAzB,EAA8B,UAAS1R,GAAT,EAAc2R,WAAd,EAA2B;AACvD,QAAI3R,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,QAAIqI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,6BAAZ;AACXxC,UAAMuF,GAAN,GAAYiS,gBAAZ,CAA6B;AAC3BC,gBAAUF,YAAYG;AADK,KAA7B,EAEG,UAAS9R,GAAT,EAAc+R,kBAAd,EAAkC;AACnC,UAAI/R,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;;AAEA;AACA,OAAC,SAASgS,WAAT,CAAqBjT,KAArB,EAA4B;AAC3B;AACA,YAAIA,SAASgT,mBAAmBF,QAAnB,CAA4BtW,MAAzC,EAAiD;AAC/C,iBAAOuE,SAAS,IAAT,CAAP;AACD;;AAED;AACA,YAAImS,aAAaF,mBAAmBF,QAAnB,CAA4B9S,KAA5B,CAAjB;AACA,YAAI2Q,UAAU9H,MAAMvK,QAAN,CAAe/C,MAAMyH,OAArB,EAA8BkQ,WAAWpP,WAAzC,EAAsDoP,UAAtD,CAAd;AACAtV,gBAAQC,GAAR,CAAY,iBAAiBqV,WAAWpP,WAAxC;;AAEA;;;AAGA4M,yCAAiCC,OAAjC,EAA0C,UAAC1P,GAAD,EAAM2P,oBAAN,EAA+B;AACvE,cAAI3P,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAEPqQ,iCAAuBX,OAAvB,EAAgC,UAAC1P,GAAD,EAAS;AACvC,gBAAIA,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAEPkR,gCAAoBe,WAAWpP,WAA/B,EAA4C,UAAC7C,GAAD,EAAMwR,eAAN,EAA0B;AACpE,kBAAIxR,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAEP;AACA;AACAwR,8BAAgB3U,OAAhB,CAAwB,mBAAW;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAIqV,MAAMC,QAAQC,iBAAR,CAA0BC,WAA1B,CAAsC,GAAtC,CAAV;AACA,oBAAIC,WAAWH,QAAQC,iBAAR,CAA0BpR,SAA1B,CAAoCkR,MAAM,CAA1C,CAAf;AACAA,sBAAMI,SAASD,WAAT,CAAqB,GAArB,CAAN;AACAC,2BAAWA,SAAStR,SAAT,CAAmB,CAAnB,EAAsBkR,GAAtB,CAAX;AACA;;AAEA;AACA;AACA,oBAAIK,eAAe7C,OAAnB;AACA,oBAAIyC,QAAQK,SAAZ,EAAuB;AACrB;AACA9C,0BAAQ5U,QAAR,CAAiB+B,OAAjB,CAAyB,UAAS4V,QAAT,EAAmB;AAC1C,wBAAI3V,QAAQ8K,MAAMzK,WAAN,CAAkBsV,QAAlB,CAAZ;AACA,wBAAI3V,MAAMrC,IAAN,KAAeH,MAAM0H,OAAzB,EAAkC;AAChC,0BAAI6O,UAAU/T,KAAd;AACA,0BAAI4V,cAAc7B,QAAQhW,IAAR,CAAa6X,WAA/B;AACA,2BAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAMD,YAAYnX,MAApC,EAA4CoX,KAA5C,EAAmD;AACjD,4BAAID,YAAYC,GAAZ,EAAiBjY,EAAjB,KAAwByX,QAAQK,SAApC,EAA+C;AAC7C;AACA;AACAD,yCAAe1B,OAAf;AACA;AACD;AACF,uBAV+B,CAU/B;AACF,qBAbyC,CAazC;AACF,mBAdD,EAFqB,CAgBnB;AACH,iBAlCgC,CAkChC;;AAED;AACA,oBAAI+B,OAAOhL,MAAMvK,QAAN,CAAe/C,MAAM2H,IAArB,EAA2BqQ,QAA3B,EAAqCH,OAArC,CAAX;AACAI,6BAAa9I,QAAb,CAAsBmJ,IAAtB;;AAEA;AACA,oBAAIxJ,WAAWuG,qBAAqBwC,QAAQ/B,oBAA7B,CAAf;AACA,oBAAIhH,QAAJ,EAAc;AACZwJ,uBAAKnJ,QAAL,CAAcL,QAAd;AACD,iBAFD,MAEO;AACLzM,0BAAQC,GAAR,kBAA2BuV,QAAQU,OAAnC,6CAAkFV,QAAQ/B,oBAA1F;AACD;AAEF,eAhDD,EALkE,CAqD9D;;AAEJ,qBAAO4B,YAAYjT,QAAQ,CAApB,CAAP;AACH,aAxDD,EAHqC,CA2DjC;AACP,WA5DD,EAHqE,CA+DjE;AACP,SAhED,EAd2B,CA8EvB;AACL,OA/ED,EA+EG,CA/EH,EANmC,CAqF5B;AACR,KAxFD,EAHuD,CA2FnD;AACL,GA5FD,EAjCkC,CA6H9B;AACL;;AAED,SAAS+T,iBAAT,CAA2BhT,QAA3B,EAAqC;AACnC,MAAIuI,KAAJ,EAAW1L,QAAQC,GAAR,CAAY,uBAAZ;;AAEX;AACA,MAAIqH,WAAW,SAAXA,QAAW,OAAQ;AACrB,QAAIvH,OAAO,EAAX;AACAA,YAAQ,cAAcU,KAAK2V,oBAA3B;AACA;AACA;;AAEA;AACA;AACA,WAAOrW,IAAP;AACD,GATD;;AAWA;AACAtC,QAAMwF,GAAN,GAAYoT,mBAAZ,CAAgC,EAAhC,EAAoC,UAAChT,GAAD,EAAMnF,IAAN,EAAe;AACjD,QAAImF,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAET;AACAnF,SAAKoY,WAAL,CAAiBpW,OAAjB,CAAyB,eAAO;AAC9B;AACA,UAAIqW,KAAKtL,MAAMvK,QAAN,CAAe/C,MAAM4H,QAArB,EAA+B6G,IAAIgK,oBAAnC,EAAyDhK,GAAzD,EAA8D9E,QAA9D,CAAT;;AAEA8E,UAAIoK,iBAAJ,CAAsBtW,OAAtB,CAA8B,iBAAS;AACrC,YAAIqN,KAAKtC,MAAMvK,QAAN,CAAe/C,MAAMyB,MAArB,EAA6BqX,MAAMC,kBAAnC,CAAT;AACAnJ,WAAGT,QAAH,CAAYyJ,EAAZ;AACD,OAHD;AAIA,UAAItJ,KAAKhC,MAAMvK,QAAN,CAAe/C,MAAMmH,EAArB,EAAyBsH,IAAIY,gBAA7B,CAAT;AACAC,SAAGH,QAAH,CAAYyJ,EAAZ;;AAEA;AACA;AACA;AACD,KAdD;AAeA/K,4BAAwB,IAAxB;AACA,WAAOrI,SAAS,IAAT,CAAP;AACD,GArBD;AAsBD;;AAED;AACA,SAAS4H,kBAAT,CAA4B9L,MAA5B,EAAoC0R,gBAApC,EAAsDxN,QAAtD,CAA8D,WAA9D,EAA2E;AACzEnD,UAAQC,GAAR,CAAY,sBAAZ;AACAD,UAAQC,GAAR,gBAAyBhB,MAAzB,UAAoCxB,MAAMiG,iBAAN,CAAwBzE,MAAxB,CAApC;;AAEAxB,QAAMyG,cAAN,CAAqBjF,MAArB;;AAEA;AACAgM,QAAM1K,KAAN;AACAqN,yBAAuB,eAAO;AAC5B,QAAIvK,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT4I,iBAAa,eAAO;AAClB,UAAI5I,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTmK,sBAAgB,eAAO;AACrB,YAAInK,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT0K,4BAAoB,eAAO;AACzB,cAAI1K,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTgL,mCAAyB,eAAO;AAC9B,gBAAIhL,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTgJ,8BAAkB,eAAO;AACvB,kBAAIhJ,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTsL,gCAAkB,eAAO;AACvB,oBAAItL,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTyL,0CAA0B,eAAO;AAC/B,sBAAIzL,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT6L,mCAAiB,eAAO;AACtB,wBAAI7L,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTgM,8CAA0B,eAAO;AAC/B,0BAAIhM,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT5F,4BAAMyF,eAAN,CAAsB,eAAO;AAC3B,4BAAIG,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTuM,4CAAoB,eAAO;AACzB,8BAAIvM,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTqP,+CAAqB/B,gBAArB,EAAuC,eAAO;AAAE;AAC9C,gCAAItN,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT6N,kDAAsBP,gBAAtB,EAAwC,eAAO;AAC7C,kCAAItN,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACTyR,+CAAiB,eAAO;AACtB,oCAAIzR,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT8S,kDAAkB,eAAO;AACvB,sCAAI9S,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;;AAETrD,0CAAQC,GAAR,CAAY,iCAAZ;AACA,yCAAOkD,SAAS,IAAT,CAAP;AACD,iCALD;AAMD,+BARD;AASD,6BAXD;AAYD,2BAdD;AAeD,yBAjBD;AAkBD,uBApBD;AAqBD,qBAvBD;AAwBD,mBA1BD;AA2BD,iBA7BD;AA8BD,eAhCD;AAiCD,aAnCD;AAoCD,WAtCD;AAuCD,SAzCD;AA0CD,OA5CD;AA6CD,KA/CD;AAgDD,GAlDD;AAmDD;;AAEDjB,OAAOC,OAAP,CAAekK,iBAAf,GAAmCA,iBAAnC;AACAnK,OAAOC,OAAP,CAAe8J,YAAf,GAA8BA,YAA9B;AACA/J,OAAOC,OAAP,CAAeqL,eAAf,GAAiCA,eAAjC;AACAtL,OAAOC,OAAP,CAAe4L,mBAAf,GAAqCA,mBAArC;AACA7L,OAAOC,OAAP,CAAekM,wBAAf,GAA0CA,wBAA1C;AACAnM,OAAOC,OAAP,CAAewM,iBAAf,GAAmCA,iBAAnC;AACAzM,OAAOC,OAAP,CAAe2M,yBAAf,GAA2CA,yBAA3C;AACA5M,OAAOC,OAAP,CAAe+M,gBAAf,GAAkCA,gBAAlC;AACAhN,OAAOC,OAAP,CAAekN,yBAAf,GAA2CA,yBAA3C;AACAnN,OAAOC,OAAP,CAAeyN,mBAAf,GAAqCA,mBAArC;AACA1N,OAAOC,OAAP,CAAe+O,qBAAf,GAAuCA,qBAAvC;AACAhP,OAAOC,OAAP,CAAeuQ,oBAAf,GAAsCA,oBAAtC;AACAxQ,OAAOC,OAAP,CAAe2S,gBAAf,GAAkCA,gBAAlC;AACA5S,OAAOC,OAAP,CAAegU,iBAAf,GAAmCA,iBAAnC;AACAjU,OAAOC,OAAP,CAAe4I,kBAAf,GAAoCA,kBAApC,C;;;;;;ACn+BA7I,OAAOC,OAAP,GAAiB;AACf;;;AAGAwU,QAAM;AACJC,WAAO,SADH;AAEJC,UAAM,CACJ,EAAEC,SAAS,OAAX,EADI,EAEJ,EAAC,cAAc,iBAAf,EAAkCC,SAAS,SAA3C,EAFI,EAEkD;AACtD,MAAElT,MAAM,UAAR,EAAoBkT,SAAS,qCAA7B,EAHI,EAIJ,EAAEC,KAAK,aAAP,EAAsBnT,MAAM,aAA5B,EAA2CkT,SAAS,iBAApD,EAJI,CAFF;AAQJE,SAAK;AACH;AADG,KARD;AAWJzF,UAAM,CACJ,EAAE0F,KAAK,MAAP,EAAepZ,MAAM,WAArB,EAAkCqZ,MAAM,cAAxC,EADI,EAEJ,EAAED,KAAK,YAAP,EAAqBC,MAAM,kDAA3B,EAFI,CAXF;AAeJzN,WAAO;AACL0N,kBAAY;AADP;AAfH,GAJS;AAuBf;;;AAGAH,OAAK,CACH,wBADG,EAEH,6CAFG,CA1BU;AA8BfI,WAAS;AACPC,WAAO;AADA,GA9BM;AAiCf;;;AAGA5N,SAAO;AACL6N,YAAQ,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,CADH;AAEL;;;AAGAC,UALK,kBAKGlO,MALH,EAKWmO,GALX,EAKgB;AACnB,UAAIA,IAAIC,QAAR,EAAkB;AAChBpO,eAAOpH,MAAP,CAAcyV,KAAd,CAAoBnZ,IAApB,CAAyB;AACvBoZ,mBAAS,KADc;AAEvBC,gBAAM,aAFiB;AAGvBC,kBAAQ,eAHe;AAIvBC,mBAAS;AAJc,SAAzB;AAMD;AACF,KAdI;;AAeLC,aAAS;AACNC,eAAS;AACP,qCAA6B;AADtB;AADH;AAfJ,GApCQ;AAyDfC,WAAS;AACP;AACA,cAFO;AAzDM,CAAjB,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd4c67caa5b1eeb2cf04","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","const myAWS = require('./myAWS')\nconst types = require('../../lib/types')\n\nvar nodeIndex = [ ]; // key -> AWSNode\n\n\nclass AWSNode {\n\n  constructor(type, id) {\n    // console.log('AWSNode.constructor()');\n    this.type = type\n    this.id = id\n    this.key = keyForNode(type, id)\n    this.data = null\n    this.children = [ ]\n    this.parents = [ ]\n    this.describeFn = null\n  }\n\n  setData(data) {\n    this.data = data\n  }\n\n  setDescribe(fn) {\n    // this.describeFn = fn\n  }\n\n  addChild(childNode) {\n    if (childNode != null) {\n      // console.log('WOOP ' + this.key + ' => ' + childNode.key)\n      this.children.push(childNode.key)\n      childNode.parents.push(this.key)\n    }\n  }\n\n  findTag(tagname) {\n    // Assumes this.data.Tags\n    if (this.data && this.data.Tags) {\n      for (var i = 0; i < this.data.Tags.length; i++) {\n        let tag = this.data.Tags[i]\n        if (tag.Key === tagname) {\n          return tag.Value\n        }\n      }\n    }\n    return null\n  }\n\n  awsLink() {\n    let ec2Home = 'https://' + myAWS.region() + '.console.aws.amazon.com/ec2/v2/home?region=' + myAWS.region()\n    let vpcHome = 'https://' + myAWS.region() + '.console.aws.amazon.com/vpc/home?region=' + myAWS.region()\n    switch (this.type) {\n      case types.SUBNET:\n        return vpcHome + '#subnets:filter=' + this.id\n      case types.SECGRP:\n        return ec2Home + '#SecurityGroups:groupId=' + this.id\n      case types.VPC:\n        return vpcHome + '#vpcs:filter=' + this.id\n      case types.NAT:\n        return vpcHome + '#NatGateways:search=' + this.id + ';sort=natGatewayId'\n      case types.IGW:\n        return vpcHome + '#igws:filter=' + this.id\n      case types.INSTANCE:\n        return ec2Home + '#Instances:search=' + this.id\n      // case types.IMAGE = 'AMI Image'\n      // case types.AZ = 'Availability Zone'\n      case types.ADDR:\n        return ec2Home + '#Addresses:search=' + this.id\n      // case types.COSTCD = 'Cost Code'\n      // case types.LOGICAL = 'Logical Grouping'\n      // case types.PUBLICIP = 'Public IP Address'\n      case types.KEYPAIR:\n        return ec2Home + '#KeyPairs:search=' + this.id\n      case types.NETIFACE:\n        return ec2Home + '#NIC:networkInterfaceId=' + this.id\n      case types.ROUTETABLE:\n        return vpcHome + '#routetables:filter=' + this.id\n      case types.ALB:\n        return ec2Home + '#LoadBalancers:search=' + this.id\n      case types.TARGETGRP:\n        return ec2Home + '#TargetGroups:search=' + this.id\n      default:\n        return null\n    }\n  }\n\n  dump() {\n    if (this.describeFn) {\n      let desc = this.describeFn(this)\n      if (desc) {\n        console.log(desc);\n      }\n    } else {\n      console.log('Id: ' + this.id)\n    }\n    // console.log(' - children:', this.children)\n    this.children.forEach(child => {\n      // console.log('  ->', child)\n      console.log('  - ' + child.id)\n    })\n  }\n\n  findEnvironment() {\n    let environment = null\n    if (this.data && this.data.Tags) {\n      this.data.Tags.forEach(tag => {\n        if (tag.Key.toLowerCase() === 'environment') {\n          environment = tag.Value;\n          // console.log(`environment is [${environment}]`);\n        }\n      })\n    }\n    return environment;\n  }\n\n  label() {\n    let label = null\n    if (this.data) {\n      if (this.data.Tags) {\n        this.data.Tags.forEach(tag => {\n          if (tag.Key.toLowerCase() === 'name') {\n            label = tag.Value;\n          }\n        })\n      }\n      if (!label && this.data['Key']) {\n        label = this.data['Key']\n      }\n    }\n    if (!label) {\n      label = this.id\n    }\n    return label\n  }//- label()\n\n}//- class AWSNode\n\nfunction reset() {\n  nodeIndex = [ ]\n}\n\nfunction keyForNode(type, id) {\n  return type + '::' + id\n}\n\nfunction nodeWithKey(key) {\n  let node = nodeIndex[key]\n  return node\n}\n\nfunction findNode(type, id, data, describeFn) {\n  // if (type === types.INSTANCE) {\n  //   console.log(`****** INSTANCE ${id}, data=`, data);\n  // }\n\n  let key = keyForNode(type, id)\n  let node = nodeIndex[key]\n  if (!node) {\n    node = new AWSNode(type, id)\n    nodeIndex[key] = node\n  }\n  if (data) {\n    node.setData(data)\n  }\n  if (describeFn) {\n    console.log(`\\n\\nWARNING: findNode(${type}) called with describeFn`);\n    node.setDescribe(describeFn)\n  }\n  return node\n}\n\nfunction dumpAll() {\n  console.log('dumpAll');\n  // console.log('nodeIndex=', nodeIndex);\n  for (var key in nodeIndex) {\n    console.log('')\n    // console.log('key: ' + key);\n    let node = nodeIndex[key]\n    node.dump()\n  }\n}\n\nfunction getIndex() {\n  return nodeIndex;\n}\n\nfunction getKeys() {\n  var keys = [ ];\n  for (var key in nodeIndex) {\n    keys.push(key);\n  }\n  return keys;\n}\n\nfunction getNodes() {\n  var nodes = [ ];\n  for (var key in nodeIndex) {\n    let node = nodeIndex[key]\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction nodesByType(type) {\n  // console.log('nodesByType(' + type + ')');\n  let arr = getNodes().filter(node => node.type === type);\n  return sortAlphabetic(arr)\n}\n\nfunction sortAlphabetic(arr) {\n  let sorted = arr.sort((a,b) => {\n\n    // Sort by environment first\n    let env1 = a.findEnvironment()\n    if (!env1) env1 = 'zzzzzzzzzz';\n    let env2 = b.findEnvironment()\n    if (!env2) env2 = 'zzzzzzzzzz';\n    if (env1 < env2) {\n      return -1\n    } else if (env1 > env2) {\n      return 1\n    }\n\n    // Sort by name\n    if (a.id < b.id) {\n      return -1\n    } else if (a.id > b.id) {\n      return 1\n    }\n    return 0\n  })\n  return sorted\n}\n\n// function downloadRegion(region, withHealthchecks, callback) {\n//   console.log(`graph.downloadRegion(${region}, ${withHealthchecks})`);\n//   download.downloadEverything(region, withHealthchecks, callback);\n// }\n\n/*\n *  Return a list of environments\n */\nfunction environments() {\n  // Get unique environments\n  var map = [ ];\n  getNodes().forEach(node => {\n    var environment = node.findEnvironment()\n    if (environment) {\n      map[environment] = environment\n    }\n  });\n  // Create a list\n  var list = [ ];\n  for (var key in map) {\n    list.push(key);\n  }\n  // Sort the list\n  list.sort((a,b) => {\n    if (a < b) {\n      return -1\n    } else if (a > b) {\n      return +1\n    } else {\n      return 0\n    }\n  })\n  return list;\n}\n\n// Constants\n// module.exports.SUBNET = SUBNET;\n// module.exports.SECGRP = types.SECGRP;\n// module.exports.VPC = types.VPC;\n// module.exports.NAT = types.NAT;\n// module.exports.IGW = types.IGW;\n// module.exports.INSTANCE = types.INSTANCE;\n// module.exports.JUMPBOX = types.JUMPBOX;\n// module.exports.IMAGE = types.IMAGE;\n// module.exports.AZ = types.AZ;\n// module.exports.ADDR = types.ADDR;\n// module.exports.COSTCD = types.COSTCD;\n// module.exports.LOGICAL = types.LOGICAL;\n// module.exports.PUBLICIP = types.PUBLICIP;\n// module.exports.KEYPAIR = types.KEYPAIR;\n// module.exports.NETIFACE = types.NETIFACE;\n// module.exports.ROUTETABLE = types.ROUTETABLE;\n// module.exports.ALB = types.ALB;\n// module.exports.TARGETGRP = types.TARGETGRP;\n// module.exports.LISTENER = types.LISTENER;\n// module.exports.RULE = types.RULE;\n// module.exports.CLUSTER = types.CLUSTER;\n// module.exports.SERVICE = types.SERVICE;\n// module.exports.TASK = types.TASK;\n\n// Functions\n// module.exports.downloadRegion = downloadRegion;\nmodule.exports.findNode = findNode;\nmodule.exports.nodeWithKey = nodeWithKey;\nmodule.exports.dumpAll = dumpAll;\nmodule.exports.keyForNode = keyForNode;\nmodule.exports.reset = reset;\nmodule.exports.index = getIndex;\nmodule.exports.keys = getKeys;\nmodule.exports.nodes = getNodes;\nmodule.exports.nodesByType = nodesByType;\nmodule.exports.environments = environments;\n\n\n\n// WEBPACK FOOTER //\n// ./server/misc/graph.js","const AWS = require('aws-sdk')\nconst awsRegions = require('aws-regions')\nconst pad = require('./util').pad\n\nconst INITIAL_REGION = 'ap-northeast-1'\nvar regions = [ ]\nvar currentRegion = INITIAL_REGION\n// var currentRegion = null\nvar awsRegion = null // Region we are currently looking at\n\nvar cloudformation = null\nvar ec2 = null\nvar elbv2 = null\nvar autoscaling = null\nvar ecs = null\nvar rds = null\n\nfunction downloadRegions (callback) {\n  console.log('  downloadRegions()')\n  ec2.describeRegions({}, (err, data) => {\n    if (err) return callback(err)\n\n    regions = data.Regions // Global variable\n    // console.log('regions=', regions);\n    regions = regions.sort((r1, r2) => {\n      if (r1.RegionName < r2.RegionName) {\n        return -1\n      } else if (r1.RegionName > r2.RegionName) {\n        return +1\n      }\n      return 0\n    })\n    return callback(null)\n  })\n}\n\n// Return the name of an AWS regions\n// e.g. us-east-1 -> (n-virginia)\nfunction regionDescription (regionCode) {\n  console.log('regionDescription(' + regionCode + ')')\n  let region = awsRegions.get(regionCode)\n  if (region) {\n    // return '(' + region.name + ')'\n    return region.name\n  }\n  return ''\n}\n\nfunction showRegions () {\n  for (let name in awsRegions.regions) {\n    let r = awsRegions.regions[name]\n    if (r.public) {\n      console.log(`${pad(name, 15)}  ${r.code}`)\n    }\n  }\n}\n\nfunction checkAwsRegion (region) {\n  // console.log(`checkAwsRegion(${region})`)\n\n  if (!region) {\n    // Default region\n    region = INITIAL_REGION\n  }\n\n  // Perhaps we are asking for a region list\n  // console.log('regions = ', awsRegions);\n  if (region === '?' || region === 'list' || region === 'unknown') {\n    showRegions()\n    process.exit(0)\n  }\n\n  // See if a place name is used\n  for (var name in awsRegions.regions) {\n    if (region.toLowerCase() === name.substring(0, region.length)) {\n      region = awsRegions.regions[name].code\n      break\n    }\n  }\n\n  // Check the code.\n  let r = awsRegions.get(region)\n  if (!r) {\n    console.log('ERROR: Unknown region ' + region)\n    process.exit(1)\n  }\n\n  if (awsRegion !== region) {\n    // console.log('switching to region ' + region);\n    // Access the different region\n    awsRegion = currentRegion = region\n    cloudformation = new AWS.CloudFormation({\n      apiVersion: '2011-01-01',\n      region: currentRegion\n    })\n    ec2 = new AWS.EC2({\n      apiVersion: '2016-11-15',\n      region: currentRegion\n    })\n    elbv2 = new AWS.ELBv2({\n      apiVersion: '2015-12-01',\n      region: currentRegion\n    })\n    autoscaling = new AWS.AutoScaling({\n      apiVersion: '2011-01-01',\n      region: currentRegion\n    })\n    ecs = new AWS.ECS({\n      apiVersion: '2014-11-13',\n      region: currentRegion\n    })\n    rds = new AWS.RDS({\n      apiVersion: '2014-10-31',\n      region: currentRegion\n    })\n  }\n\n  return currentRegion\n}\n\nmodule.exports.cloudformation = function () {\n  return cloudformation\n}\n\nmodule.exports.ec2 = function () {\n  return ec2\n}\n\nmodule.exports.ecs = function () {\n  return ecs\n}\n\nmodule.exports.rds = function () {\n  return rds\n}\n\nmodule.exports.elbv2 = function () {\n  return elbv2\n}\n\nmodule.exports.autoscaling = function () {\n  return autoscaling\n}\n\nmodule.exports.region = function () {\n  return currentRegion\n}\n\nmodule.exports.regions = function () {\n  return regions\n}\nmodule.exports.checkAwsRegion = checkAwsRegion\nmodule.exports.regionDescription = regionDescription\nmodule.exports.downloadRegions = downloadRegions\n\nmodule.exports.INITIAL_REGION = INITIAL_REGION\n\n\n\n// WEBPACK FOOTER //\n// ./server/misc/myAWS.js","// AWS Node types\nmodule.exports.SUBNET = 'Subnet'\nmodule.exports.SECGRP = 'Security Group'\nmodule.exports.VPC = 'Virtual Private Cloud'\nmodule.exports.NAT = 'NAT Gateway'\nmodule.exports.IGW = 'Internet Gateway'\nmodule.exports.INSTANCE = 'EC2 Instance' // may have node.data._isJumpbox set\nmodule.exports.IMAGE = 'AMI Image'\nmodule.exports.AZ = 'Availability Zone'\nmodule.exports.ADDR = 'Elastic IP'\nmodule.exports.COSTCD = 'Cost Code'\nmodule.exports.LOGICAL = 'Logical Grouping'\nmodule.exports.PUBLICIP = 'Public IP Address'\nmodule.exports.KEYPAIR = 'Key Pair'\nmodule.exports.NETIFACE = 'Network Interface'\nmodule.exports.ROUTETABLE = 'Route Table'\nmodule.exports.ALB = 'Load Balancer'\nmodule.exports.TARGETGRP = 'Target Group'\nmodule.exports.LISTENER = 'Listener'\nmodule.exports.RULE = 'Rule'\nmodule.exports.CLUSTER = 'Cluster'\nmodule.exports.SERVICE = 'Service'\nmodule.exports.TASK = 'Task'\nmodule.exports.DATABASE = 'Database'\nmodule.exports.CACHE = 'Cache'\n\nmodule.exports.id = function (node) {\n  if (!node.data) {\n    return '-'\n  }\n  switch (node.type) {\n    case this.SUBNET:\n      return node.data.SubnetId\n\n    case this.SECGRP:\n      return node.data.GroupId\n\n    case this.VPC:\n      return node.data.VpcId\n\n    case this.NAT:\n      return node.data ? node.data.NatGatewayId : '?'\n\n    case this.IGW:\n      return node.data.InternetGatewayId\n\n    case this.INSTANCE:\n      return node.data.InstanceId\n\n    case this.IMAGE:\n      return node.id\n\n    case this.AZ:\n      return node.id\n\n    case this.ADDR:\n      return node.data.AllocationId\n\n    case this.COSTCD:\n      return node.key\n\n    case this.LOGICAL:\n      return node.key\n\n    case this.PUBLICIP:\n      return node.id\n\n    case this.KEYPAIR:\n      return node.key\n\n    case this.NETIFACE:\n      return node.id\n\n    case this.ROUTETABLE:\n      return node.key + '\\n--' + node.hasPublicRoutes\n\n    case this.ALB:\n      return node.id\n\n    case this.TARGETGRP:\n      return node.data.TargetGroupName\n\n    case this.LISTENER:\n      return node.key\n\n    case this.RULE:\n      return node.key\n\n    case this.CLUSTER:\n      return node.data.clusterName\n\n    case this.SERVICE:\n      return node.data.serviceName\n\n    case this.TASK:\n      return node.id\n\n    case this.DATABASE:\n      return node.key\n\n    case this.CACHE:\n      return node.key\n\n    default:\n      return node.key\n  }\n}\n\nmodule.exports.label = function (node) {\n  // let label\n  let name\n  switch (node.type) {\n    case this.SUBNET:\n      name = findTag(node, 'Name')\n      return name || node.data.SubnetId\n\n    case this.SECGRP:\n      // if (node.data.GroupName === 'default') {\n      //   // Default for the VPC\n      //   return node.data.Description\n      // }\n      name = findTag(node, 'Name')\n      return name || node.data.GroupName\n\n    case this.VPC:\n      name = findTag(node, 'Name')\n      return name || node.key\n\n    case this.NAT:\n      name = findTag(node, 'Name')\n      if (name) {\n        return name\n      }\n      if (node.data) {\n        return node.data.NatGatewayId\n      }\n      return '?'\n\n    case this.IGW:\n      return node.key\n\n    case this.INSTANCE:\n      name = findTag(node, 'Name')\n      return name || node.key\n\n    case this.IMAGE:\n      return node.key\n\n    case this.AZ:\n      return node.id\n\n    case this.ADDR:\n      return `public: ${node.data.PublicIp}`\n\n    case this.COSTCD:\n      return node.key\n\n    case this.LOGICAL:\n      return node.key\n\n    case this.PUBLICIP:\n      return node.id\n\n    case this.KEYPAIR:\n      return node.key\n\n    case this.NETIFACE:\n      return `Private IP: ${node.data.PrivateIpAddress}`\n\n    case this.ROUTETABLE:\n      return node.key + '\\n--' + node.hasPublicRoutes\n\n    case this.ALB:\n      return node.data.LoadBalancerName\n\n    case this.TARGETGRP:\n      return node.data.TargetGroupName\n\n    case this.LISTENER:\n      return node.key\n\n    case this.RULE:\n      return node.key\n\n    case this.CLUSTER:\n      return node.data.clusterName\n\n    case this.SERVICE:\n      return node.data.serviceName\n\n    case this.TASK:\n      if (node.data.containers && node.data.containers.length > 0) {\n        return node.data.containers[0].name\n      }\n      return ' '\n\n    case this.DATABASE:\n      return node.key\n\n    case this.CACHE:\n      return node.key\n\n    default:\n      return node.key\n  }\n}\n\nmodule.exports.description = function (node) {\n  switch (node.type) {\n    case this.SUBNET:\n      return node.data.CidrBlock\n\n    case this.SECGRP:\n      return node.data.Description\n\n    case this.VPC:\n      return node.data.State\n\n    case this.NAT:\n      if (node.data) {\n        return `Public IP: ${node.data.NatGatewayAddresses[0].PublicIp}`\n      }\n      console.log('Strange, NAT node does not have data:', node)\n      return '?'\n\n    case this.IGW:\n      return node.key\n\n    case this.INSTANCE:\n      return ''\n\n    case this.IMAGE:\n      return node.key\n\n    case this.AZ:\n      return ' '\n\n    case this.ADDR:\n      return `private: ${node.data.PrivateIpAddress}`\n\n    case this.COSTCD:\n      return node.key\n\n    case this.LOGICAL:\n      return node.key\n\n    case this.PUBLICIP:\n      return ''\n\n    case this.KEYPAIR:\n      return node.key\n\n    case this.NETIFACE:\n      return ' '\n\n    case this.ROUTETABLE:\n      return node.key\n\n    case this.ALB:\n      return node.data.DNSName\n\n    case this.TARGETGRP:\n      return ' '\n\n    case this.LISTENER:\n      return node.key\n\n    case this.RULE:\n      return node.key\n\n    case this.CLUSTER:\n      return `${node.data.status.toLowerCase()}, ${node.data.registeredContainerInstancesCount} instances, ${node.data.runningTasksCount} tasks`\n\n    case this.SERVICE:\n      return `${node.data.status.toLowerCase()}, ${node.data.runningCount} running`\n\n    case this.TASK:\n      return `version ${node.data.version}, ${node.data.lastStatus.toLowerCase()}`\n\n    case this.DATABASE:\n      return node.key\n\n    case this.CACHE:\n      return node.key\n\n    default:\n      return `DESCRIPTION FOR ${node.key}`\n  }\n}\n\nmodule.exports.describe = function (node) {\n  switch (node.type) {\n    case this.SUBNET:\n      return describeSubnet(node)\n\n    case this.SECGRP:\n      return describeSecurityGroup(node)\n\n    case this.VPC:\n      return describeVpc(node)\n\n    case this.NAT:\n      return node.key\n\n    case this.IGW:\n      return node.key\n\n    case this.INSTANCE:\n      return describeInstance(node)\n\n    case this.IMAGE:\n      return node.key\n\n    case this.AZ:\n      return node.key\n\n    case this.ADDR:\n      return node.key\n\n    case this.COSTCD:\n      return node.key\n\n    case this.LOGICAL:\n      return node.key\n\n    case this.PUBLICIP:\n      return `<b>Public IP Address</b><br/>${node.id}`\n\n    case this.KEYPAIR:\n      return node.key\n\n    case this.NETIFACE:\n      return node.key\n\n    case this.ROUTETABLE:\n      return node.key\n\n    case this.ALB:\n      return node.key\n\n    case this.TARGETGRP:\n      return `\n        <b>Target Group</b><br/>\n        Name: ${node.data.TargetGroupName}<br>\n        Healthcheck: ${node.data.HealthCheckPath}<br>\n        Expected reply: ${node.data.Matcher.HttpCode}<br>`\n\n    case this.LISTENER:\n      return node.key\n\n    case this.RULE:\n      return node.key\n\n    case this.CLUSTER:\n      return node.key\n\n    case this.SERVICE:\n      return `\n        <b>Service</b><br/>\n        Name: ${node.data.serviceName}<br>\n        Status: ${node.data.status}<br>\n        Tasks: ${node.data.runningCount}<br>`\n\n    case this.TASK:\n      return describeTask(node)\n\n    case this.DATABASE:\n      return node.key\n\n    case this.CACHE:\n      return node.key\n\n    default:\n      return node.key\n  }\n}\n\nfunction describeInstance (node) {\n  let desc = '<b>EC2 Instance</b><br/>'\n  let name = findTag(node, 'Name')\n  if (name) {\n    desc += '  Name: ' + name + '<br>'\n  }\n  let description = findTag(node, 'Description')\n  if (description) {\n    desc += '  Description: ' + description + '<br>'\n  }\n  desc += `Type: ${node.data.InstanceType}<br>`\n  desc += `Keyname: ${node.data.KeyName}<br>`\n  desc += `State: ${node.data.State.Name}<br>`\n  if (node.data.PublicIpAddress) {\n    desc += '  IP addr: ' + node.data.PublicIpAddress + '<br>'\n  }\n  return desc\n}\n\nfunction describeVpc (node) {\n  let s = '<b>Virtual Private Cloud (VPC)</b><br/>'\n  let name = findTag(node, 'Name')\n  if (name) {\n    s += '  Name: ' + name + '<br>'\n  }\n  s += '  Id: ' + node.data.VpcId + '<br>'\n  s += `State: ${node.data.State}<br>`\n  let contact = findTag(node, 'Contact')\n  if (contact) {\n    s += '  Contact: ' + contact + '<br>'\n  }\n  return s\n}\n\nfunction describeSubnet (node) {\n  // Return a description\n  let desc = `Id: ${node.data.SubnetId}<br/>`\n\n  // // See if the subnet's routing table connects to an Internet Gateway\n  // let isPublicSubnet = false\n  // node.parents.forEach(parent => {\n  //   if (parent.type === module.exports.ROUTETABLE && parent.hasPublicRoutes) {\n  //     isPublicSubnet = true\n  //   }\n  // })\n  // if (isPublicSubnet) {\n  //   desc += 'PUBLIC SUBNET<br/>'\n  // } else {\n  //   desc += 'PRIVATE SUBNET<br/>'\n  // }\n\n  let name = findTag(node, 'Name')\n  if (name) {\n    desc += `Name ${name}<br/>`\n  }\n\n  let description = findTag(node, 'Description')\n  if (description) {\n    desc += `Description: ${description}<br/>`\n  }\n\n  // Route table?\n  let useVpcRouteTable = true\n  node.parents.forEach(parent => {\n    if (parent.type === this.ROUTETABLE) {\n      useVpcRouteTable = false\n    }\n  })\n  if (useVpcRouteTable) {\n    desc += 'Use default route table for VPC<br/>'\n  }\n  // IP Address range\n  desc += `CidrBlock: ${node.data.CidrBlock}<br/>`\n  return desc\n}\n\nfunction describeSecurityGroup (node) {\n  // Return a description\n  let desc = `Security Group<br/>`\n  desc += `Id: ${node.data.GroupId}<br/>`\n  let name = findTag(node, 'Name')\n  if (name) {\n    desc += `Name Tag: ${name}<br/>`\n  }\n  desc += `Description: ${node.data.Description}<br/>`\n  desc += `GroupName: ${node.data.GroupName}<br/>`\n\n  // Route table?\n  // let useVpcRouteTable = true\n  // node.parents.forEach(parent => {\n  //   if (parent.type === this.ROUTETABLE) {\n  //     useVpcRouteTable = false\n  //   }\n  // })\n  // if (useVpcRouteTable) {\n  //   desc += 'Use default route table for VPC<br/>'\n  // }\n  // // IP Address range\n  // desc += `CidrBlock: ${node.data.CidrBlock}<br/>`\n  return desc\n}\n\nfunction describeTask (node) {\n  let desc = `<b>Task</b><br/>`\n  node.data.containers.forEach(c => {\n    desc += `\n      Name: ${c.name}<br>\n      Ports: ${c.networkBindings.hostPort} -&gt; ${c.networkBindings.port}<br>`\n  })\n  desc += `\n    Version: ${node.data.version}<br>\n    Status: ${node.data.lastStatus}<br>\n    Desired Status: ${node.data.desiredStatus}<br>\n    Memory: ${node.data.memory}<br>\n    CPU: ${node.data.cpu}<br>\n  `\n  return desc\n}\n\nfunction findTag (node, tagname) {\n  // Assumes node.data.Tags\n  if (node.data && node.data.Tags) {\n    for (var i = 0; i < node.data.Tags.length; i++) {\n      let tag = node.data.Tags[i]\n      if (tag.Key === tagname) {\n        return tag.Value\n      }\n    }\n  }\n  return ''\n}\nmodule.exports.findTag = findTag\n\n\n\n// WEBPACK FOOTER //\n// ./lib/types.js","import express from 'express'\nimport { Nuxt, Builder } from 'nuxt'\n\nimport api from './api'\n\nconst app = express()\nconst host = process.env.HOST || '127.0.0.1'\nconst port = process.env.PORT || 3001\n\napp.set('port', port)\n\n// Import API Routes\napp.use('/api', api)\n\n// Import and Set Nuxt.js options\nlet config = require('../nuxt.config.js')\nconfig.dev = !(process.env.NODE_ENV === 'production')\n\n// Init Nuxt.js\nconst nuxt = new Nuxt(config)\n\n// Build only in dev mode\nif (config.dev) {\n  const builder = new Builder(nuxt)\n  builder.build()\n}\n\n// Give nuxt middleware to express\napp.use(nuxt.render)\n\n// Listen the server\napp.listen(port, host)\nconsole.log('Server listening on ' + host + ':' + port) // eslint-disable-line no-console\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 5\n// module chunks = 0","import { Router } from 'express'\n\nimport users from './users'\nimport graphApi from './graphApi'\n\nconst router = Router()\n\n// Add USERS Routes\nrouter.use(users)\nrouter.use(graphApi)\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/index.js","import { Router } from 'express'\n\nconst router = Router()\n\n// Mock Users\nconst users = [\n  { name: 'Alexandre', stuff: 'Chicken shit' },\n  { name: 'Pooya', stuff: 'Likes frisbee' },\n  { name: 'Sébastien', stuff: 'Sleeps a lot' },\n  { name: 'Phil', stuff: 'Likes VueJS' },\n]\n\n/* GET users listing. */\nrouter.get('/users', function (req, res, next) {\n  console.log('API /users');\n  res.json(users)\n})\n\n/* GET user by ID. */\nrouter.get('/users/:id', function (req, res, next) {\n  const id = parseInt(req.params.id)\n  if (id >= 0 && id < users.length) {\n    res.json(users[id])\n  } else {\n    res.sendStatus(404)\n  }\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/users.js","import { Router } from 'express'\nimport graph from '../misc/graph'\n// import types from '../misc/types'\nimport LRU from 'lru-cache'\nimport download from '../misc/download'\n\n\n// , options = { max: 500\n//             , length: function (n, key) { return n * 2 + key.length }\n//             , dispose: function (key, n) { n.close() }\n//             , maxAge: 1000 * 60 * 60 }\n// , cache = LRU(options)\nlet cache = LRU(10) // sets just the max size to 10 items (actually size, but default size is 1)\n\nconst router = Router()\n\n/* GET user by ID. */\nrouter.get('/graph/:region', function (req, res, next) {\n  console.log('API /graph/:region', req.params)\n  let region = req.params.region\n  console.log(`API: Region is ${region}`);\n\n  // See if we can use the value in the cache.\n  let cacheKey = region\n  let value = cache.get(cacheKey) // \"value\"\n  if (req.query.reload) {\n    console.log('Reloading cache')\n    value = null\n  }\n  if (value) {\n    res.json(value)\n    return\n  }\n\n  // Download all we need from AWS\n  download.downloadEverything(region, false, err => {\n    if (err) {\n      console.log(`Error downloading region ${region}`, err, err.stack);\n      res.sendStatus(500)\n      return;\n    }\n    let index = graph.index()\n    // console.log('Have index:', index)\n    let obj = { }\n    for (var key in index) {\n      obj[key] = index[key]\n    }\n\n    console.log('Setting value in the cache')\n    cache.set(cacheKey, obj)\n\n    res.json(obj)\n  });\n})\n\nexport default router\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/graphApi.js","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"aws-regions\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-regions\"\n// module id = 10\n// module chunks = 0","\nfunction pad (str, len) {\n  if (str == null) {\n    str = ''\n  }\n  while (str.length < len) {\n    str = str + ' '\n  }\n  return str.substring(0, len)\n}\n\nfunction capitalize (str) {\n  return str.substring(0, 1).toUpperCase() + str.substring(1)\n}\n\nmodule.exports.pad = pad\nmodule.exports.capitalize = capitalize\n\n\n\n// WEBPACK FOOTER //\n// ./server/misc/util.js","module.exports = require(\"lru-cache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lru-cache\"\n// module id = 12\n// module chunks = 0","var myAWS = require('./myAWS')\nconst graph = require('./graph')\nconst types = require('../../lib/types')\n\nvar loadBalancersAreLoaded = false;\nvar targetGroupsAreLoaded = false;\nvar instancesAreLoaded = false;\n\nconst debug = true;\n\nfunction findTargetGroupByARN(arn) {\n  // console.log('findTargetGroupByARN(' + arn + ')');\n  let all = graph.nodes();\n  for (var i = 0; i < all.length; i++) {\n    let node = all[i];\n    // if (node.type === types.TARGETGRP) {\n    //   console.log('  tg: ', node.data.TargetGroupArn);\n    // }\n    if (node.type === types.TARGETGRP && node.data.TargetGroupArn === arn) {\n      // console.log('FOUND THE TARGET GROUP!');\n      return node;\n    }\n  }\n  return null;\n}\n\nfunction findInstanceById(id) {\n  // console.log(`findInstanceById(${id})`);\n  let all = graph.nodes();\n  for (var i = 0; i < all.length; i++) {\n    let node = all[i];\n    // if (node.type === types.INSTANCE) {\n    //   console.log('  instance: ', node.data.InstanceId);\n    // }\n    if ((node.type === types.INSTANCE || node.type === types.JUMPBOX) && node.data.InstanceId === id) {\n      // console.log('FOUND THE INSTANCE!');\n      return node;\n    }\n  }\n  return null;\n}\n\nfunction downloadVpcs(callback) {\n  if (debug) console.log('  downloadVpcs()');\n  myAWS.ec2().describeVpcs({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.Vpcs.forEach(rec => {\n      // console.log('rec=', rec);\n      graph.findNode(types.VPC, rec.VpcId, rec)\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadInstances(callback) {\n  if (debug) console.log('  downloadInstances()');\n\n  myAWS.ec2().describeInstances({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.Reservations.forEach(res => {\n      res.Instances.forEach(instance => {\n\n        // See if it is a jumpbox\n        // console.log('instance=', instance);\n        instance.Tags.forEach(tag => {\n          if (tag.Key === 'Name' && tag.Value.indexOf('-jumpbox-') >= 0) {\n            instance._isJumpbox = true\n          }\n        });\n\n        // Create the node\n        let i = graph.findNode(types.INSTANCE, instance.InstanceId, instance)\n\n        // ImageId\n        let img = graph.findNode(types.IMAGE, instance.ImageId, null)\n        i.addChild(img)\n\n        // Availability zone\n        if (instance.Placement && instance.Placement.AvailabilityZone) {\n          let az = graph.findNode(types.AZ, instance.Placement.AvailabilityZone, null, node => {\n            // Return a description\n            let desc = 'Availability Zone (' + node.id + ')\\n'\n            return desc\n          })\n          az.addChild(i)\n        }\n\n        // Remember if it has a public IP\n        if (instance.PublicIpAddress) {\n          let ip = graph.findNode(types.PUBLICIP, instance.PublicIpAddress)\n          ip.addChild(i)\n        }\n\n        // Subnet\n        //ZZZ Can an instance have multiple subnets?\n        let sn = graph.findNode(types.SUBNET, instance.SubnetId)\n        sn.addChild(i)\n\n        // VPC\n        let vpc = graph.findNode(types.VPC, instance.VpcId)\n        vpc.addChild(i)\n\n        // Security groups\n        instance.SecurityGroups.forEach(sg => {\n          let g = graph.findNode(types.SECGRP, sg.GroupId)\n          g.addChild(i)\n          i.addChild(g)\n        })\n      })\n    })\n    instancesAreLoaded = true;\n    return callback(null)\n  })\n}\n\nfunction downloadSubnets(callback) {\n  if (debug) console.log('  downloadSubnets()');\n\n  // let describe = types.describe\n\n  myAWS.ec2().describeSubnets({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.Subnets.forEach(rec => {\n      let sn = graph.findNode(types.SUBNET, rec.SubnetId, rec)\n\n      // Add this to it's VPC\n      let v = graph.findNode(types.VPC, rec.VpcId, null)\n      v.addChild(sn)\n\n      // Add this to it's AvailabilityZone\n      let az = graph.findNode(types.AZ, rec.AvailabilityZone, null)\n      az.addChild(sn)\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadSecurityGroups(callback) {\n  if (debug) console.log('  downloadSecurityGroups()');\n  let describe = node => {\n    let desc = ''\n    desc += '  Name: ' + node.data.GroupName + '\\n'\n    desc += '  Description: ' + node.data.Description + '\\n'\n    return desc\n  }\n\n  myAWS.ec2().describeSecurityGroups({}, (err, data) => {\n    if (err) return callback(err);\n    data.SecurityGroups.forEach(grp => {\n      // console.log('grp=', grp);\n      let g = graph.findNode(types.SECGRP, grp.GroupId, grp, describe)\n\n      // Add this to it's VPC\n      let v = graph.findNode(types.VPC, grp.VpcId, null)\n      v.addChild(g)\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadNatGateways(callback) {\n  if (debug) console.log('  downloadNatGateways()');\n  let describe = node => {\n    let desc = ''\n    desc += '  State: ' + node.data.State + '\\n';\n    return desc\n  }\n\n  myAWS.ec2().describeNatGateways({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.NatGateways.forEach(grp => {\n      console.log('nat is ' + grp.NatGatewayId);\n      let g = graph.findNode(types.NAT, grp.NatGatewayId, grp, describe)\n\n      if (grp.State !== 'deleted') {\n        // Add this to it's subnet\n        let sn = graph.findNode(types.SUBNET, grp.SubnetId, null)\n        sn.addChild(g)\n\n        // Add this to it's VPC\n        let v = graph.findNode(types.VPC, grp.VpcId, null)\n        v.addChild(g)\n\n        // Add it's public IPs\n        grp.NatGatewayAddresses.forEach(addr => {\n          if (addr.NetworkInterfaceId) {\n            let iface = graph.findNode(types.NETIFACE, addr.NetworkInterfaceId, null)\n            g.addChild(iface)\n          }\n          if (addr.PublicIp) {\n            let ip = graph.findNode(types.PUBLICIP, addr.PublicIp, null)\n            g.addChild(ip)\n          }\n        })\n      }\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadInternetGateways(callback) {\n  if (debug) console.log('  downloadInternetGateways()');\n  let describe = node => {\n    let desc = ''\n    let name = node.findTag('Name')\n    if (name) {\n      desc += '  Name: ' + name + '\\n'\n    }\n    return desc\n  }\n\n  // An Internet Gateway provides the means by which the stuff in the\n  // VPC connects to the Internet. I believe a NAT will quietly use\n  // the Internet Gateway, but doesn't actually reference it.\n  myAWS.ec2().describeInternetGateways({}, (err, data) => {\n    if (err) return callback(err);\n\n    data.InternetGateways.forEach(rec => {\n      // console.log('\\n\\n\\nINTERNET GATEWAY=', rec)\n      let igw = graph.findNode(types.IGW, rec.InternetGatewayId, rec, describe)\n\n      // See where it is attached\n      rec.Attachments.forEach(attachment => {\n        if (attachment.VpcId) {\n          let vpc = graph.findNode(types.VPC, attachment.VpcId)\n          vpc.addChild(igw)\n        }\n      })\n    })\n    return callback(null)\n  })\n}\n\n// Elastic IPs\nfunction downloadAddresses(callback) {\n  if (debug) console.log('  downloadAddresses()');\n  let describe = node => {\n    // Return a description\n    let desc = ''\n    desc += '  IP Address: ' + node.data.PublicIp + '\\n';\n    return desc\n  }\n\n  myAWS.ec2().describeAddresses({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.Addresses.forEach(rec => {\n      let addr = graph.findNode(types.ADDR, rec.AllocationId, rec, describe)\n\n      // Remember if it has a public IP\n      if (rec.PublicIp) {\n        let ip = graph.findNode(types.PUBLICIP, rec.PublicIp)\n        ip.addChild(addr)\n      }\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadAvailabilityZones(callback) {\n  if (debug) console.log('  downloadAvailabilityZones()');\n  let describe = node => {\n    let desc = ''\n    // desc += '  IP Address: ' + node.data.PublicIp + '\\n';\n    return desc\n  }\n\n  myAWS.ec2().describeAvailabilityZones({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.AvailabilityZones.forEach(rec => {\n      let g = graph.findNode(types.AZ, rec.ZoneName, rec, describe)\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadKeyPairs(callback) {\n  if (debug) console.log('  downloadKeyPairs()');\n  let describe = node => {\n    let desc = ''\n    return desc\n  }\n\n  myAWS.ec2().describeKeyPairs({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.KeyPairs.forEach(rec => {\n      // This will create the node\n      graph.findNode(types.KEYPAIR, rec.KeyName, rec, describe)\n    })\n    return callback(null)\n  })\n}\n\n// Inbound interface from the Internet\nfunction downloadNetworkInterfaces(callback) {\n  if (debug) console.log('  downloadNetworkInterfaces()');\n  let describe = node => {\n    let desc = ''\n    desc += node.data.Description\n    return desc\n  }\n\n  myAWS.ec2().describeNetworkInterfaces({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.NetworkInterfaces.forEach(rec => {\n      // console.log('\\nNETWORK INTERFACE:', rec);\n      let ni = graph.findNode(types.NETIFACE, rec.NetworkInterfaceId, rec, describe)\n\n      // Public IP via association\n      if (rec.Association && rec.Association.PublicIp) {\n        let ip = graph.findNode(types.PUBLICIP, rec.Association.PublicIp)\n        ip.addChild(ni)\n      }\n\n      // Attachment\n      if (rec.Attachment) {\n        if (rec.Attachment.InstanceId) {\n          let instance = graph.findNode(types.INSTANCE, rec.Attachment.InstanceId)\n          ni.addChild(instance)\n        }\n      }\n\n      // AvailabilityZone\n      let az = graph.findNode(types.AZ, rec.AvailabilityZone)\n      az.addChild(ni)\n\n      // Subnet\n      let subnet = graph.findNode(types.SUBNET, rec.SubnetId)\n      subnet.addChild(ni)\n\n      // VPC\n      let vpc = graph.findNode(types.VPC, rec.VpcId)\n      vpc.addChild(ni)\n    })\n    return callback(null)\n  })\n}\n\nfunction downloadRouteTables(callback) {\n  if (debug) console.log('  downloadRouteTables()');\n  let describe = node => {\n    // Return a description\n    let desc = ''\n    if (node.hasPublicRoutes) {\n      desc += '  --  HAS PUBLIC ROUTES'\n    }\n    let name = node.findTag('Name')\n    if (name) {\n      desc += '\\n' + name\n    }\n    // See if this is a main route table\n    // node.data.Associations.forEach(assoc => {\n    //   if (assoc.Main) {\n    //     desc += '\\nMain Route table for ' + assoc.RouteTableAssociationId\n    //   }\n    // })\n\n    // Routes\n    let gateways = []\n    desc += '\\n<table class=\"smalltable\">\\n'\n    node.data.Routes.forEach(route => {\n      if (route.GatewayId === 'local') {\n        desc += '<tr><td>' + route.DestinationCidrBlock + '</td><td>  >>>&nbsp;&nbsp;&nbsp;local</td></tr>\\n'\n      } else {\n        let key = graph.keyForNode(types.NAT, route.GatewayId)\n        desc += '<tr><td>' + route.DestinationCidrBlock + '</td><td>  >>>&nbsp;&nbsp;&nbsp;<a href=\"?node=' + key + '\">' + route.GatewayId + '</a></td></tr>\\n'\n      }\n    })\n    desc += '</table>'\n    return desc\n  }\n\n  myAWS.ec2().describeRouteTables({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('routeTables=', data);\n    data.RouteTables.forEach(rec => {\n      // console.log('\\nRoute table:', rec);\n      let rt = graph.findNode(types.ROUTETABLE, rec.RouteTableId, rec, describe)\n\n      // Look for routes to Internet Gateways\n      let gateways = [] // Only add each gateway it once\n      rec.Routes.forEach(route => {\n        if (route.GatewayId === 'local') {\n          // Routing to the local subnet\n        } else if (route.NatGatewayId) {\n          // Routes to a NAT\n          let id = route.NatGatewayId\n          if (!gateways[id]) {\n            let nat = graph.findNode(types.NAT, id)\n            rt.addChild(nat)\n            // Having a route to the internet via a NAT is the definition of a \"Public Subnet\"\n            rt.hasPublicRoutes = true\n            gateways[id] = true\n          }\n        } else if (route.GatewayId) {\n          // Routes to an Internet Gateway\n          let id = route.GatewayId\n          if (!gateways[id]) {\n            let igw = graph.findNode(types.IGW, id)\n            rt.addChild(igw)\n            // // Having a route to an Internet Gateway is also the definition of a \"Public Subnet\"\n            // rt.hasPublicRoutes = true\n            gateways[id] = true\n          }\n        }\n      })\n\n      // Subnets mapped to this routing table\n      rec.Associations.forEach(assoc => {\n        if (assoc.SubnetId) {\n          let sn = graph.findNode(types.SUBNET, assoc.SubnetId)\n          rt.addChild(sn)\n        }\n      })\n\n      // VPC\n      let vpc = graph.findNode(types.VPC, rec.VpcId)\n      vpc.addChild(rt)\n    })\n    return callback(null)\n  })\n}\n\nfunction describeTargets(targetGroup, withHealthchecks) {\n  let desc = ''\n  if (withHealthchecks) {\n    if (targetGroup._health && targetGroup._health.length > 0) {\n      targetGroup._health.forEach(health => {\n        // console.log('health=', health);\n        let key = graph.keyForNode(types.INSTANCE, health.Target.Id)\n        desc += '    -->> Instance '\n        desc += '<a href=\"?node=' + key + '\">' + health.Target.Id + '</a>'\n        desc += ', port ' + health.Target.Port + '   (' + health.TargetHealth.State + ')\\n'\n      })\n    } else {\n      desc += '    No targets\\n'\n    }\n  } else {\n    desc += 'Unknown targets (--skip-healthchecks is set)\\n'\n  }\n  return desc\n}\n\nfunction downloadLoadBalancers(withHealthchecks, callback) {\n  if (debug) console.log('  downloadLoadBalancers()');\n\n  if (!targetGroupsAreLoaded) {\n    console.log('ERROR: downloadLoadBalancers() called before downloadTargetGroups()');\n    console.log('Links between load balancers and target groups will be missing.');\n  }\n\n\n  let describe = node => {\n    let desc = ''\n    desc += 'Status: ' + node.data.State.Code + '\\n'\n    let dns = node.data.DNSName\n    if (dns) {\n      desc += 'dns: <a href=\"http://' + dns + '\" target=\"_blank\">' + dns + '</a>\\n'\n    }\n    if (node._listeners) {\n      node._listeners.forEach(listener => {\n        let targetGroup = listener._targetGroupNode;\n        if (!targetGroup) {\n\n          // No target group\n          let link = listener.Protocol.toLowerCase() + '://' + dns + ':' + listener.Port;\n          desc += '<a href=\"' + link + '\" target=\"_blank\">Public ' + listener.Protocol.toLowerCase() + ' / ' + listener.Port + '</a> -> NO TARGET GROUP?\\n'\n        } else {\n\n          // Have a target group\n          // If we have the healthcheck information, we can also show the targets\n          let link = listener.Protocol.toLowerCase() + '://' + dns + ':' + listener.Port + targetGroup.data.HealthCheckPath\n          desc += '<a href=\"' + link + '\" target=\"_blank\">Public ' + listener.Protocol.toLowerCase() + ' / ' + listener.Port + '</a> -> Target Group (<a href=\"?node=' + targetGroup.key + '\">' + targetGroup.id + '</a>)\\n'\n\n          // Add the targets for this target group, if they have been loaded\n          desc += describeTargets(targetGroup, withHealthchecks)\n        }\n      })\n    } else {\n      desc += 'INTERNAL ERROR: MISSING _LISTENERS\\n'\n    }\n    return desc\n  }\n\n  // We load the Load Balancers here (into nodeIndex),\n  // and Listeners into\n  //    => load-balancer-node._listeners,\n  // and the target group for each Listener into\n  //    => load-balancer-node._listeners[x]._targetGroupNode\n  // and the targets and their health into\n  //    => load-balancer-node._listeners[x]._targetGroupNode._health\n  // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ELBv2.html#describeLoadBalancers-property\n  myAWS.elbv2().describeLoadBalancers({}, (err, data) => {\n    if (err) return callback(err);\n    // console.log('data=', data);\n\n    (function nextALB(index) {\n      if (index >= data.LoadBalancers.length) {\n        loadBalancersAreLoaded = true;\n        return callback(null)\n      }\n      let rec = data.LoadBalancers[index]\n      let alb = graph.findNode(types.ALB, rec.LoadBalancerName, rec, describe)\n\n      // Availability Zones and Subnets\n      rec.AvailabilityZones.forEach(az => {\n        let az2 = graph.findNode(types.AZ, az.ZoneName)\n        az2.addChild(alb)\n\n        let subnet = graph.findNode(types.SUBNET, az.SubnetId)\n        subnet.addChild(alb)\n      })\n\n      // Security Groups\n      rec.SecurityGroups.forEach(sgid => {\n        let sg = graph.findNode(types.SECGRP, sgid)\n        sg.addChild(alb)\n      })\n\n      // VPC\n      let vpc = graph.findNode(types.VPC, rec.VpcId)\n      vpc.addChild(alb)\n\n      // Get the listeners for this load Balancer\n      // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ELBv2.html#describeListeners-property\n      myAWS.elbv2().describeListeners({\n        LoadBalancerArn: rec.LoadBalancerArn\n      }, (err, data) => {\n        if (err) return callback(err);\n\n        // console.log('listener data=', data);\n        alb._listeners = data.Listeners;\n        // return callback(null)\n\n        // Iterate through the listeners\n        (function nextListener(listenerIndex) {\n          if (listenerIndex >= data.Listeners.length) {\n            return nextALB(index + 1)\n          }\n          let listener = data.Listeners[listenerIndex]\n          // console.log('\\n\\nLISTENER=', listener);\n\n          // The listener contains 'DefaultActions', which will be\n          // the ARN of a target group to forward to.\n          listener.DefaultActions.forEach(action => {\n\n            // Find the Target Group for this Action\n            let targetGroup = findTargetGroupByARN(action.TargetGroupArn)\n            if (!targetGroup) {\n              // No target group, so ignore this listener\n              //ZZZZ Should check the default target group\n              return nextListener(listenerIndex + 1);\n            }\n            listener._targetGroupNode = targetGroup\n            alb.addChild(targetGroup)\n\n            // Load the health of the targets, if required\n            // console.log('target group=', targetGroup);\n            if (!withHealthchecks) {\n              // We are skipping health check, to load faster\n              return nextListener(listenerIndex + 1);\n            }\n            // See if the healthcheck info is already loaded for this target group\n            if (listener._targetGroupNode._health) {\n              return nextListener(listenerIndex + 1);\n            }\n\n            // Load the health of the targets in the target group\n            // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ELBv2.html#describeTargetHealth-property\n            // console.log('load health for ' + targetGroup.data.TargetGroupArn);\n            myAWS.elbv2().describeTargetHealth({\n              TargetGroupArn: targetGroup.data.TargetGroupArn\n            }, (err, healthData) => {\n              if (err) return callback(err);\n              listener._targetGroupNode._health = healthData.TargetHealthDescriptions\n              // console.log('target health=', healthData);\n              healthData.TargetHealthDescriptions.forEach(health => {\n                // Instance\n                // console.log('health=', health);\n                let instance = graph.findNode(types.INSTANCE, health.Target.Id)\n                alb.addChild(instance)\n              }) //- next health\n              return nextListener(listenerIndex + 1);\n            }) //- describeTargetHealth\n          }) //- next action\n        })(0) //- next listener\n      }) //- describeListeners\n    })(0) //- nextALB\n  }) //- describeLoadBalancers\n}\n\nfunction downloadTargetGroups(withHealthchecks, callback) {\n  if (debug) console.log('  downloadTargetGroups()');\n\n  // Function to describe node\n  let describe = node => {\n    let desc = ''\n    desc += 'From: ' + node.data.Protocol.toLowerCase() + ' / ' + node.data.Port + '\\n'\n    desc += 'Healthcheck: ' + node.data.HealthCheckPath + '\\n'\n\n    // Add the targets for this target group, if they have been loaded\n    desc += describeTargets(node, withHealthchecks)\n    return desc\n  }\n\n  // Load the definitions\n  myAWS.elbv2().describeTargetGroups({}, (err, data) => {\n    if (err) return callback(err);\n\n    // console.log('data=', data);\n    data.TargetGroups.forEach(rec => {\n      // console.log('tg=', rec);\n      let tg = graph.findNode(types.TARGETGRP, rec.TargetGroupName, rec, describe)\n\n      // VPC\n      let vpc = graph.findNode(types.VPC, rec.VpcId)\n      vpc.addChild(tg)\n    })\n    targetGroupsAreLoaded = true;\n    return callback(null)\n  })\n}\n\n/*\n*   Get the container instances for a cluster.\n*/\nfunction loadContainerInstancesForCluster(cluster, callback/* (err, instanceForContainer) */) {\n  let clusterName = cluster.data.clusterName;\n  if (debug) console.log(`  - getting list of container instances (cluster=${clusterName})`);\n  let instanceForContainer = [ ]; // containerInstanceArn -> node of EC2 instance\n  myAWS.ecs().listContainerInstances({\n    cluster: clusterName\n  }, function(err, containerInstanceList) {\n    if (err) return callback(err);\n    if (containerInstanceList.containerInstanceArns.length == 0) {\n      return callback(null, instanceForContainer);\n    }\n    var params = {\n      cluster: clusterName,\n      containerInstances: containerInstanceList.containerInstanceArns\n    };\n    if (debug) console.log(`  - getting container instance details (cluster=${clusterName}, ${containerInstanceList.containerInstanceArns.length} container instances)`);\n    myAWS.ecs().describeContainerInstances(params, function(err, containerDefinitions) {\n      if (err) return callback(err);\n\n      // Add the container instances to our graph\n      // console.log(`containerDefinitions=`, containerDefinitions);\n      containerDefinitions.containerInstances.forEach(function(containerDef) {\n        let instance = findInstanceById(containerDef.ec2InstanceId)\n        cluster.addChild(instance);\n\n        // Remember this, so we can create a link between tasks and this EC2 instance\n        instanceForContainer[containerDef.containerInstanceArn] = instance;\n      }); // next containerInstance\n      return callback(null, instanceForContainer);\n    });//- describeContainerInstances\n  });//- listContainerInstances\n};//- function loadContainerInstancesForCluster()\n\n/*\n*   Get the services for this cluster.\n*\n*   https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ECS.html#describeServices-property\n*/\nfunction loadServicesForCluster(cluster, callback/* (err) */) {\n  if (debug) console.log(`  - getting list of services for cluster ${cluster.data.clusterName}`);\n\n  let clusterName = cluster.data.clusterName;\n  let clusterArn = cluster.data.clusterArn;\n  myAWS.ecs().listServices({\n    cluster: clusterName\n  }, function(err, serviceListData) {\n    if (err) return callback(err);\n    if (serviceListData.serviceArns.length === 0) {\n      return callback(null)\n    }\n    if (debug) console.log('  - getting service details');\n    myAWS.ecs().describeServices({\n      services: serviceListData.serviceArns,\n      cluster: clusterArn\n    }, function(err, serviceDefinitions) {\n      if (err) return callback(err);\n\n      // console.log('serviceDefinitions=', serviceDefinitions);\n      // console.log(`Got services`);\n      serviceDefinitions.services.forEach(serviceDef => {\n\n        // Next Service\n        // console.log('serviceDef=', serviceDef);\n        let service = graph.findNode(types.SERVICE, serviceDef.serviceName, serviceDef)\n        cluster.addChild(service);\n\n        // Find the load balancer nodes for this service.\n        serviceDef.loadBalancers.forEach(lb => {\n          let tg = findTargetGroupByARN(lb.targetGroupArn);\n          if (tg) {\n            tg.addChild(service);\n            // service.addChild(tg);\n          } else {\n            console.log(`ERROR: Service ${service.key} refers to unknown target group ${lb.targetGroupArn}`);\n          }\n        }); //- next load balancer\n      }); //- next service\n      return callback(null);\n    }); //- describeServices\n  }); //- listServices\n}//- loadServicesForCluster\n\n/*\n*   Get the task definitions for a cluster.\n*/\nfunction loadTasksForCluster(clusterName, callback/* (err,taskDefinitions) */) {\n  if (debug) console.log(`  - getting list of tasks (cluster=${clusterName})`);\n  myAWS.ecs().listTasks({\n    cluster: clusterName\n  }, function(err, taskList) {\n    if (err) return callback(err);\n    // console.log('taskList=', taskList); // successful response\n    if (taskList.taskArns.length === 0) {\n      return callback(null, [ ]); // No tasks\n    }\n    var params = {\n      tasks: taskList.taskArns,\n      cluster: clusterName\n    };\n    if (debug) console.log('- getting task details');\n    myAWS.ecs().describeTasks(params, function(err, taskDefinitions) {\n      if (err) return callback(err);\n\n      // Have the task definitions\n      return callback(null, taskDefinitions.tasks);\n    }); //- describeTasks\n  }); //- listTasks\n}\n\nfunction downloadClusters(callback) {\n  if (debug) console.log('  downloadClusters()');\n\n  // Check the load balancers have been loaded already,\n  // as we'll need to link to them from ECS services.\n  if (!loadBalancersAreLoaded) {\n    console.log('ERROR: downloadClusters() called before downloadLoadBalancers()');\n    console.log('Links between services and load balancers will be unknown.');\n  }\n  if (!targetGroupsAreLoaded) {\n    console.log('ERROR: downloadClusters() called before downloadTargetGroups()');\n    console.log('Links between services and target groups will be unknown.');\n  }\n  if (!instancesAreLoaded) {\n    console.log('ERROR: downloadClusters() called before downloadInstances()');\n    console.log('Links between services and instances will be unknown.');\n  }\n\n  let describe = (node) => {\n    let desc = ''\n    let name = node.findTag('Name');\n    if (name) {\n      desc += '  Name: ' + name + '\\n'\n    }\n    return desc\n  }\n\n  /*\n  *   Get the clusters for this region.\n  *\n  *   See https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ECS.html#listClusters-property\n  */\n  if (debug) console.log('  - getting list of clusters');\n  myAWS.ecs().listClusters({ }, function(err, clusterList) {\n    if (err) return callback(err);\n    if (debug) console.log('  - getting cluster details');\n    myAWS.ecs().describeClusters({\n      clusters: clusterList.clusterArns\n    }, function(err, clusterDefinitions) {\n      if (err) return callback(err);\n\n      // console.log('clusterDefinitions: ', clusterDefinitions);\n\n      // Loop through the clusters.\n      (function nextCluster(index) {\n        // Past the last cluster?\n        if (index >= clusterDefinitions.clusters.length) {\n          return callback(null)\n        }\n\n        // Next Cluster\n        let clusterDef = clusterDefinitions.clusters[index]\n        let cluster = graph.findNode(types.CLUSTER, clusterDef.clusterName, clusterDef)\n        console.log('Got cluster ' + clusterDef.clusterName);\n\n        /*\n        *   Get the container instances for this cluster.\n        */\n        loadContainerInstancesForCluster(cluster, (err, instanceForContainer) => {\n          if (err) return callback(err);\n\n            loadServicesForCluster(cluster, (err) => {\n              if (err) return callback(err);\n\n                loadTasksForCluster(clusterDef.clusterName, (err, taskDefinitions) => {\n                  if (err) return callback(err);\n\n                    // Loop through the task definitions.\n                    // console.log(`taskDefinitions=`, taskDefinitions);\n                    taskDefinitions.forEach(taskDef => {\n                      // console.log(`Task ${taskDef.taskDefinitionArn}`);\n                      // console.log(`  startedBy:`, taskDef.startedBy);\n                      // console.log(`  Containers:`, taskDef.containers);\n                      // console.log(`  Last status ${taskDef.lastStatus}`);\n\n                      // Get the task name from it's definition. For example, the end of:\n                      // 'arn:aws:ecs:ap-southeast-1:238285074004:task-definition/nbt-trsgms1-authservice:6'\n                      let pos = taskDef.taskDefinitionArn.lastIndexOf('/')\n                      let taskName = taskDef.taskDefinitionArn.substring(pos + 1)\n                      pos = taskName.lastIndexOf(':');\n                      taskName = taskName.substring(0, pos)\n                      // console.log(`task name is ${taskName}`);\n\n                      // See if it was started by a service\n                      // console.log('Looking for service parent');\n                      let parentOfTask = cluster;\n                      if (taskDef.startedBy) {\n                        // console.log('checking services');\n                        cluster.children.forEach(function(childKey) {\n                          let child = graph.nodeWithKey(childKey);\n                          if (child.type === types.SERVICE) {\n                            let service = child;\n                            let deployments = service.data.deployments;\n                            for (var cnt = 0; cnt < deployments.length; cnt++) {\n                              if (deployments[cnt].id === taskDef.startedBy) {\n                                // Yep, was started by this service.\n                                // console.log('\\n\\nWas started by ', service);\n                                parentOfTask = service;\n                                break;\n                              }\n                            }//- next deployment\n                          }//- child is a service\n                        })// next child of the cluster\n                      }//- startedBy != null\n\n                      // Define the task, and add it to it's parent.\n                      let task = graph.findNode(types.TASK, taskName, taskDef);\n                      parentOfTask.addChild(task);\n\n                      // Link the task to the containerInstance's EC2 instance.\n                      let instance = instanceForContainer[taskDef.containerInstanceArn];\n                      if (instance) {\n                        task.addChild(instance);\n                      } else {\n                        console.log(`ERROR: task ${taskDef.taskArn} refers to unknown containerInstance ${taskDef.containerInstanceArn}`);\n                      }\n\n                    }); //- next task\n\n                    return nextCluster(index + 1)\n                }); //- loadTasksForCluster\n            }); //- loadServicesForCluster\n        }); //- loadContainerInstancesForCluster\n      })(0); // next cluster\n    }); //- describeClusters\n  }); //- listClusters\n}\n\nfunction downloadDatabases(callback) {\n  if (debug) console.log('  downloadDatabases()');\n\n  // Function to describe node\n  let describe = node => {\n    let desc = ''\n    desc += 'DATABASE ' + node.DBInstanceIdentifier\n    // desc += 'From: ' + node.data.Protocol.toLowerCase() + ' / ' + node.data.Port + '\\n'\n    // desc += 'Healthcheck: ' + node.data.HealthCheckPath + '\\n'\n\n    // Add the targets for this target group, if they have been loaded\n    // desc += describeTargets(node, withHealthchecks)\n    return desc\n  }\n\n  // Load the definitions\n  myAWS.rds().describeDBInstances({}, (err, data) => {\n    if (err) return callback(err);\n\n    //console.log('data=', data);\n    data.DBInstances.forEach(rec => {\n      // console.log('\\n\\n\\nDB =>', rec);\n      let db = graph.findNode(types.DATABASE, rec.DBInstanceIdentifier, rec, describe)\n\n      rec.VpcSecurityGroups.forEach(sgDef => {\n        let sg = graph.findNode(types.SECGRP, sgDef.VpcSecurityGroupId)\n        sg.addChild(db)\n      })\n      let az = graph.findNode(types.AZ, rec.AvailabilityZone)\n      az.addChild(db)\n\n      // VPC\n      // let vpc = graph.findNode(types.VPC, rec.VpcId)\n      // vpc.addChild(tg)\n    })\n    targetGroupsAreLoaded = true;\n    return callback(null)\n  })\n}\n\n// See http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/EC2.html#describeSubnets-property\nfunction downloadEverything(region, withHealthchecks, callback/* (err) */) {\n  console.log('downloadEverything()');\n  console.log(`Region is ${region} (${myAWS.regionDescription(region)})`);\n\n  myAWS.checkAwsRegion(region)\n\n  // Clear existing list of nodes and reload everything\n  graph.reset();\n  downloadSecurityGroups(err => {\n    if (err) return callback(err)\n    downloadVpcs(err => {\n      if (err) return callback(err)\n      downloadSubnets(err => {\n        if (err) return callback(err)\n        downloadNatGateways(err => {\n          if (err) return callback(err)\n          downloadInternetGateways(err => {\n            if (err) return callback(err)\n            downloadInstances(err => {\n              if (err) return callback(err)\n              downloadAddresses(err => {\n                if (err) return callback(err)\n                downloadAvailabilityZones(err => {\n                  if (err) return callback(err)\n                  downloadKeyPairs(err => {\n                    if (err) return callback(err)\n                    downloadNetworkInterfaces(err => {\n                      if (err) return callback(err)\n                      myAWS.downloadRegions(err => {\n                        if (err) return callback(err)\n                        downloadRouteTables(err => {\n                          if (err) return callback(err)\n                          downloadTargetGroups(withHealthchecks, err => { // Must be before load balancers\n                            if (err) return callback(err)\n                            downloadLoadBalancers(withHealthchecks, err => {\n                              if (err) return callback(err)\n                              downloadClusters(err => {\n                                if (err) return callback(err)\n                                downloadDatabases(err => {\n                                  if (err) return callback(err)\n\n                                  console.log('finished downloading everything');\n                                  return callback(null)\n                                })\n                              })\n                            })\n                          })\n                        })\n                      })\n                    })\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    })\n  })\n}\n\nmodule.exports.downloadInstances = downloadInstances;\nmodule.exports.downloadVpcs = downloadVpcs;\nmodule.exports.downloadSubnets = downloadSubnets;\nmodule.exports.downloadNatGateways = downloadNatGateways;\nmodule.exports.downloadInternetGateways = downloadInternetGateways;\nmodule.exports.downloadAddresses = downloadAddresses;\nmodule.exports.downloadAvailabilityZones = downloadAvailabilityZones;\nmodule.exports.downloadKeyPairs = downloadKeyPairs;\nmodule.exports.downloadNetworkInterfaces = downloadNetworkInterfaces;\nmodule.exports.downloadRouteTables = downloadRouteTables;\nmodule.exports.downloadLoadBalancers = downloadLoadBalancers;\nmodule.exports.downloadTargetGroups = downloadTargetGroups;\nmodule.exports.downloadClusters = downloadClusters;\nmodule.exports.downloadDatabases = downloadDatabases;\nmodule.exports.downloadEverything = downloadEverything;\n\n\n\n// WEBPACK FOOTER //\n// ./server/misc/download.js","module.exports = {\n  /*\n  ** Headers of the page\n  */\n  head: {\n    title: 'starter',\n    meta: [\n      { charset: 'utf-8' },\n      {'http-equiv': 'X-UA-Compatible', content: 'IE=edge'},// From https://github.com/nuxt/nuxt.js/issues/1395\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: 'Nuxt.js project' }\n    ],\n    css: [\n      // '~/node_modules/bulma/css/bulma.css'\n    ],\n    link: [\n      { rel: 'icon', type: 'image/png', href: '/favicon.png' },\n      { rel: 'stylesheet', href: '//fonts.googleapis.com/css?family=Lato|Open+Sans' }\n    ],\n    build: {\n      extractCSS: true\n    }\n  },\n  /*\n  ** Global CSS\n  */\n  css: [\n    '~/assets/css/main.scss',\n    '~/node_modules/vis/dist/vis-network.min.css',\n  ],\n  loading: {\n    color: '#41b883'\n  },\n  /*\n  ** Add axios globally\n  */\n  build: {\n    vendor: ['axios', 'vis', 'lodash'],\n    /*\n    ** Run ESLINT on save\n    */\n    extend (config, ctx) {\n      if (ctx.isClient) {\n        config.module.rules.push({\n          enforce: 'pre',\n          test: /\\.(js|vue)$/,\n          loader: 'eslint-loader',\n          exclude: /(node_modules)/\n        })\n      }\n    },\n    postcss: {\n       plugins: {\n         'postcss-custom-properties': false\n       }\n     }\n  },\n  modules: [\n    // '@nuxtjs/bulma'\n    'nuxt-buefy'\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./nuxt.config.js"],"sourceRoot":""}