#
#       This Cloudformation script is called by CodePipeline when
#       a new version of the application has been saved as Docker
#       image into the artifacts repository.
#
#       It updates the task definition for the service, causing
#       the new image to be started.
#
#       Based on:
#       https://github.com/awslabs/ecs-refarch-continuous-deployment/blob/master/templates/service.yaml
#
Parameters:
  Tag:
    Type: String
    Default: latest

  DesiredCount:
    Type: Number
    Default: 0

  TargetGroup:
    Type: String

  Cluster:
    Type: String

  Repository:
    Type: String


Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ECSServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: ___APPLICATION___App
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ___ENVIRONMENT___-___APPLICATION___
      ContainerDefinitions:
        - Name: ___APPLICATION___App
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          EntryPoint:
            - /usr/sbin/apache2
            - -D
            - FOREGROUND
          Essential: true
          Memory: 128
          MountPoints:
            - SourceVolume: my-vol
              ContainerPath: /var/www/my-vol
            - SourceVolume: volume-from-s3config
              ContainerPath: !Sub /Volumes
          PortMappings:
            - ContainerPort: 80
          Environment:
            - Name: Tag
              Value: !Ref Tag
        - Name: busybox
          Image: busybox
          EntryPoint:
            - sh
            - -c
          Essential: false
          Memory: 128
          VolumesFrom:
            - SourceContainer: ___APPLICATION___App
          Command:
            - /bin/sh -c "while true; do /bin/date > /var/www/my-vol/date; sleep 1; done"
      Volumes:
        - Name: my-vol
        - Name: volume-from-s3config
          Host:
            SourcePath: !Sub /Volumes/___APPLICATION___
